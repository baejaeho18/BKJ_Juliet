Compiled from "CWE129_Improper_Validation_of_Array_Index__random_array_size_21.java"
public class testcases.CWE129_Improper_Validation_of_Array_Index.s05.CWE129_Improper_Validation_of_Array_Index__random_array_size_21 extends testcasesupport.AbstractTestCase {
  private boolean badPrivate;

  private boolean goodB2G1Private;

  private boolean goodB2G2Private;

  private boolean goodG2BPrivate;

  public testcases.CWE129_Improper_Validation_of_Array_Index.s05.CWE129_Improper_Validation_of_Array_Index__random_array_size_21();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method testcasesupport/AbstractTestCase."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #7                  // Field badPrivate:Z
       9: aload_0
      10: iconst_0
      11: putfield      #13                 // Field goodB2G1Private:Z
      14: aload_0
      15: iconst_0
      16: putfield      #16                 // Field goodB2G2Private:Z
      19: aload_0
      20: iconst_0
      21: putfield      #19                 // Field goodG2BPrivate:Z
      24: return

  public void bad() throws java.lang.Throwable;
    Code:
       0: new           #22                 // class java/security/SecureRandom
       3: dup
       4: invokespecial #24                 // Method java/security/SecureRandom."<init>":()V
       7: invokevirtual #25                 // Method java/security/SecureRandom.nextInt:()I
      10: istore_1
      11: aload_0
      12: iconst_1
      13: putfield      #7                  // Field badPrivate:Z
      16: aload_0
      17: iload_1
      18: invokevirtual #29                 // Method badSink:(I)V
      21: return

  private void badSink(int) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #7                  // Field badPrivate:Z
       4: ifeq          35
       7: aconst_null
       8: astore_2
       9: iload_1
      10: iflt          20
      13: iload_1
      14: newarray       int
      16: astore_2
      17: goto          25
      20: ldc           #33                 // String Array size is negative
      22: invokestatic  #35                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      25: aload_2
      26: iconst_0
      27: iconst_5
      28: iastore
      29: aload_2
      30: iconst_0
      31: iaload
      32: invokestatic  #41                 // Method testcasesupport/IO.writeLine:(I)V
      35: return

  public void good() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method goodB2G1:()V
       4: aload_0
       5: invokevirtual #46                 // Method goodB2G2:()V
       8: aload_0
       9: invokevirtual #49                 // Method goodG2B:()V
      12: return

  private void goodB2G1() throws java.lang.Throwable;
    Code:
       0: new           #22                 // class java/security/SecureRandom
       3: dup
       4: invokespecial #24                 // Method java/security/SecureRandom."<init>":()V
       7: invokevirtual #25                 // Method java/security/SecureRandom.nextInt:()I
      10: istore_1
      11: aload_0
      12: iconst_0
      13: putfield      #13                 // Field goodB2G1Private:Z
      16: aload_0
      17: iload_1
      18: invokevirtual #52                 // Method goodB2G1Sink:(I)V
      21: return

  private void goodB2G1Sink(int) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #13                 // Field goodB2G1Private:Z
       4: ifeq          15
       7: ldc           #55                 // String Benign, fixed string
       9: invokestatic  #35                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      12: goto          43
      15: aconst_null
      16: astore_2
      17: iload_1
      18: ifle          28
      21: iload_1
      22: newarray       int
      24: astore_2
      25: goto          33
      28: ldc           #33                 // String Array size is negative
      30: invokestatic  #35                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      33: aload_2
      34: iconst_0
      35: iconst_5
      36: iastore
      37: aload_2
      38: iconst_0
      39: iaload
      40: invokestatic  #41                 // Method testcasesupport/IO.writeLine:(I)V
      43: return

  private void goodB2G2() throws java.lang.Throwable;
    Code:
       0: new           #22                 // class java/security/SecureRandom
       3: dup
       4: invokespecial #24                 // Method java/security/SecureRandom."<init>":()V
       7: invokevirtual #25                 // Method java/security/SecureRandom.nextInt:()I
      10: istore_1
      11: aload_0
      12: iconst_1
      13: putfield      #16                 // Field goodB2G2Private:Z
      16: aload_0
      17: iload_1
      18: invokevirtual #57                 // Method goodB2G2Sink:(I)V
      21: return

  private void goodB2G2Sink(int) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #16                 // Field goodB2G2Private:Z
       4: ifeq          35
       7: aconst_null
       8: astore_2
       9: iload_1
      10: ifle          20
      13: iload_1
      14: newarray       int
      16: astore_2
      17: goto          25
      20: ldc           #33                 // String Array size is negative
      22: invokestatic  #35                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      25: aload_2
      26: iconst_0
      27: iconst_5
      28: iastore
      29: aload_2
      30: iconst_0
      31: iaload
      32: invokestatic  #41                 // Method testcasesupport/IO.writeLine:(I)V
      35: return

  private void goodG2B() throws java.lang.Throwable;
    Code:
       0: iconst_2
       1: istore_1
       2: aload_0
       3: iconst_1
       4: putfield      #19                 // Field goodG2BPrivate:Z
       7: aload_0
       8: iload_1
       9: invokevirtual #60                 // Method goodG2BSink:(I)V
      12: return

  private void goodG2BSink(int) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #19                 // Field goodG2BPrivate:Z
       4: ifeq          35
       7: aconst_null
       8: astore_2
       9: iload_1
      10: iflt          20
      13: iload_1
      14: newarray       int
      16: astore_2
      17: goto          25
      20: ldc           #33                 // String Array size is negative
      22: invokestatic  #35                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      25: aload_2
      26: iconst_0
      27: iconst_5
      28: iastore
      29: aload_2
      30: iconst_0
      31: iaload
      32: invokestatic  #41                 // Method testcasesupport/IO.writeLine:(I)V
      35: return

  public static void main(java.lang.String[]) throws java.lang.ClassNotFoundException, java.lang.InstantiationException, java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: invokestatic  #63                 // Method mainFromParent:([Ljava/lang/String;)V
       4: return
}
