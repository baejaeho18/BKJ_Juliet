Compiled from "CWE129_Improper_Validation_of_Array_Index__Environment_array_size_11.java"
public class testcases.CWE129_Improper_Validation_of_Array_Index.s02.CWE129_Improper_Validation_of_Array_Index__Environment_array_size_11 extends testcasesupport.AbstractTestCase {
  public testcases.CWE129_Improper_Validation_of_Array_Index.s02.CWE129_Improper_Validation_of_Array_Index__Environment_array_size_11();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method testcasesupport/AbstractTestCase."<init>":()V
       4: return

  public void bad() throws java.lang.Throwable;
    Code:
       0: invokestatic  #7                  // Method testcasesupport/IO.staticReturnsTrue:()Z
       3: ifeq          46
       6: ldc           #15                 // int -2147483648
       8: istore_1
       9: ldc           #16                 // String ADD
      11: invokestatic  #18                 // Method java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
      14: astore_2
      15: aload_2
      16: ifnull        43
      19: aload_2
      20: invokevirtual #24                 // Method java/lang/String.trim:()Ljava/lang/String;
      23: invokestatic  #30                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      26: istore_1
      27: goto          43
      30: astore_3
      31: getstatic     #36                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
      34: getstatic     #40                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      37: ldc           #46                 // String Number format exception parsing data from string
      39: aload_3
      40: invokevirtual #48                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      43: goto          48
      46: iconst_0
      47: istore_1
      48: invokestatic  #7                  // Method testcasesupport/IO.staticReturnsTrue:()Z
      51: ifeq          82
      54: aconst_null
      55: astore_2
      56: iload_1
      57: iflt          67
      60: iload_1
      61: newarray       int
      63: astore_2
      64: goto          72
      67: ldc           #54                 // String Array size is negative
      69: invokestatic  #56                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      72: aload_2
      73: iconst_0
      74: iconst_5
      75: iastore
      76: aload_2
      77: iconst_0
      78: iaload
      79: invokestatic  #60                 // Method testcasesupport/IO.writeLine:(I)V
      82: return
    Exception table:
       from    to  target type
          19    27    30   Class java/lang/NumberFormatException

  private void goodG2B1() throws java.lang.Throwable;
    Code:
       0: invokestatic  #63                 // Method testcasesupport/IO.staticReturnsFalse:()Z
       3: ifeq          11
       6: iconst_0
       7: istore_1
       8: goto          13
      11: iconst_2
      12: istore_1
      13: invokestatic  #7                  // Method testcasesupport/IO.staticReturnsTrue:()Z
      16: ifeq          47
      19: aconst_null
      20: astore_2
      21: iload_1
      22: iflt          32
      25: iload_1
      26: newarray       int
      28: astore_2
      29: goto          37
      32: ldc           #54                 // String Array size is negative
      34: invokestatic  #56                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      37: aload_2
      38: iconst_0
      39: iconst_5
      40: iastore
      41: aload_2
      42: iconst_0
      43: iaload
      44: invokestatic  #60                 // Method testcasesupport/IO.writeLine:(I)V
      47: return

  private void goodG2B2() throws java.lang.Throwable;
    Code:
       0: invokestatic  #7                  // Method testcasesupport/IO.staticReturnsTrue:()Z
       3: ifeq          11
       6: iconst_2
       7: istore_1
       8: goto          13
      11: iconst_0
      12: istore_1
      13: invokestatic  #7                  // Method testcasesupport/IO.staticReturnsTrue:()Z
      16: ifeq          47
      19: aconst_null
      20: astore_2
      21: iload_1
      22: iflt          32
      25: iload_1
      26: newarray       int
      28: astore_2
      29: goto          37
      32: ldc           #54                 // String Array size is negative
      34: invokestatic  #56                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      37: aload_2
      38: iconst_0
      39: iconst_5
      40: iastore
      41: aload_2
      42: iconst_0
      43: iaload
      44: invokestatic  #60                 // Method testcasesupport/IO.writeLine:(I)V
      47: return

  private void goodB2G1() throws java.lang.Throwable;
    Code:
       0: invokestatic  #7                  // Method testcasesupport/IO.staticReturnsTrue:()Z
       3: ifeq          46
       6: ldc           #15                 // int -2147483648
       8: istore_1
       9: ldc           #16                 // String ADD
      11: invokestatic  #18                 // Method java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
      14: astore_2
      15: aload_2
      16: ifnull        43
      19: aload_2
      20: invokevirtual #24                 // Method java/lang/String.trim:()Ljava/lang/String;
      23: invokestatic  #30                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      26: istore_1
      27: goto          43
      30: astore_3
      31: getstatic     #36                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
      34: getstatic     #40                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      37: ldc           #46                 // String Number format exception parsing data from string
      39: aload_3
      40: invokevirtual #48                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      43: goto          48
      46: iconst_0
      47: istore_1
      48: invokestatic  #63                 // Method testcasesupport/IO.staticReturnsFalse:()Z
      51: ifeq          62
      54: ldc           #66                 // String Benign, fixed string
      56: invokestatic  #56                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      59: goto          90
      62: aconst_null
      63: astore_2
      64: iload_1
      65: ifle          75
      68: iload_1
      69: newarray       int
      71: astore_2
      72: goto          80
      75: ldc           #54                 // String Array size is negative
      77: invokestatic  #56                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      80: aload_2
      81: iconst_0
      82: iconst_5
      83: iastore
      84: aload_2
      85: iconst_0
      86: iaload
      87: invokestatic  #60                 // Method testcasesupport/IO.writeLine:(I)V
      90: return
    Exception table:
       from    to  target type
          19    27    30   Class java/lang/NumberFormatException

  private void goodB2G2() throws java.lang.Throwable;
    Code:
       0: invokestatic  #7                  // Method testcasesupport/IO.staticReturnsTrue:()Z
       3: ifeq          46
       6: ldc           #15                 // int -2147483648
       8: istore_1
       9: ldc           #16                 // String ADD
      11: invokestatic  #18                 // Method java/lang/System.getenv:(Ljava/lang/String;)Ljava/lang/String;
      14: astore_2
      15: aload_2
      16: ifnull        43
      19: aload_2
      20: invokevirtual #24                 // Method java/lang/String.trim:()Ljava/lang/String;
      23: invokestatic  #30                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      26: istore_1
      27: goto          43
      30: astore_3
      31: getstatic     #36                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
      34: getstatic     #40                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      37: ldc           #46                 // String Number format exception parsing data from string
      39: aload_3
      40: invokevirtual #48                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      43: goto          48
      46: iconst_0
      47: istore_1
      48: invokestatic  #7                  // Method testcasesupport/IO.staticReturnsTrue:()Z
      51: ifeq          82
      54: aconst_null
      55: astore_2
      56: iload_1
      57: ifle          67
      60: iload_1
      61: newarray       int
      63: astore_2
      64: goto          72
      67: ldc           #54                 // String Array size is negative
      69: invokestatic  #56                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      72: aload_2
      73: iconst_0
      74: iconst_5
      75: iastore
      76: aload_2
      77: iconst_0
      78: iaload
      79: invokestatic  #60                 // Method testcasesupport/IO.writeLine:(I)V
      82: return
    Exception table:
       from    to  target type
          19    27    30   Class java/lang/NumberFormatException

  public void good() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: invokevirtual #68                 // Method goodG2B1:()V
       4: aload_0
       5: invokevirtual #73                 // Method goodG2B2:()V
       8: aload_0
       9: invokevirtual #76                 // Method goodB2G1:()V
      12: aload_0
      13: invokevirtual #79                 // Method goodB2G2:()V
      16: return

  public static void main(java.lang.String[]) throws java.lang.ClassNotFoundException, java.lang.InstantiationException, java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: invokestatic  #82                 // Method mainFromParent:([Ljava/lang/String;)V
       4: return
}
