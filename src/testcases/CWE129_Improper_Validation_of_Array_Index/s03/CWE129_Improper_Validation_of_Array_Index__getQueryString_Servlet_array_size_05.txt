Compiled from "CWE129_Improper_Validation_of_Array_Index__getQueryString_Servlet_array_size_05.java"
public class testcases.CWE129_Improper_Validation_of_Array_Index.s03.CWE129_Improper_Validation_of_Array_Index__getQueryString_Servlet_array_size_05 extends testcasesupport.AbstractTestCaseServlet {
  private boolean privateTrue;

  private boolean privateFalse;

  public testcases.CWE129_Improper_Validation_of_Array_Index.s03.CWE129_Improper_Validation_of_Array_Index__getQueryString_Servlet_array_size_05();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method testcasesupport/AbstractTestCaseServlet."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #7                  // Field privateTrue:Z
       9: aload_0
      10: iconst_0
      11: putfield      #13                 // Field privateFalse:Z
      14: return

  public void bad(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #7                  // Field privateTrue:Z
       4: ifeq          89
       7: ldc           #18                 // int -2147483648
       9: istore_3
      10: new           #19                 // class java/util/StringTokenizer
      13: dup
      14: aload_1
      15: invokeinterface #21,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getQueryString:()Ljava/lang/String;
      20: ldc           #27                 // String &
      22: invokespecial #29                 // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      25: astore        4
      27: aload         4
      29: invokevirtual #32                 // Method java/util/StringTokenizer.hasMoreTokens:()Z
      32: ifeq          86
      35: aload         4
      37: invokevirtual #36                 // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      40: astore        5
      42: aload         5
      44: ldc           #39                 // String id=
      46: invokevirtual #41                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      49: ifeq          83
      52: aload         5
      54: iconst_3
      55: invokevirtual #47                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      58: invokestatic  #51                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      61: istore_3
      62: goto          86
      65: astore        6
      67: getstatic     #57                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
      70: getstatic     #63                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      73: ldc           #69                 // String Number format exception reading id from query string
      75: aload         6
      77: invokevirtual #71                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      80: goto          86
      83: goto          27
      86: goto          91
      89: iconst_0
      90: istore_3
      91: aload_0
      92: getfield      #7                  // Field privateTrue:Z
      95: ifeq          130
      98: aconst_null
      99: astore        4
     101: iload_3
     102: iflt          113
     105: iload_3
     106: newarray       int
     108: astore        4
     110: goto          118
     113: ldc           #77                 // String Array size is negative
     115: invokestatic  #79                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     118: aload         4
     120: iconst_0
     121: iconst_5
     122: iastore
     123: aload         4
     125: iconst_0
     126: iaload
     127: invokestatic  #83                 // Method testcasesupport/IO.writeLine:(I)V
     130: return
    Exception table:
       from    to  target type
          52    62    65   Class java/lang/NumberFormatException

  private void goodG2B1(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #13                 // Field privateFalse:Z
       4: ifeq          12
       7: iconst_0
       8: istore_3
       9: goto          14
      12: iconst_2
      13: istore_3
      14: aload_0
      15: getfield      #7                  // Field privateTrue:Z
      18: ifeq          53
      21: aconst_null
      22: astore        4
      24: iload_3
      25: iflt          36
      28: iload_3
      29: newarray       int
      31: astore        4
      33: goto          41
      36: ldc           #77                 // String Array size is negative
      38: invokestatic  #79                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      41: aload         4
      43: iconst_0
      44: iconst_5
      45: iastore
      46: aload         4
      48: iconst_0
      49: iaload
      50: invokestatic  #83                 // Method testcasesupport/IO.writeLine:(I)V
      53: return

  private void goodG2B2(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #7                  // Field privateTrue:Z
       4: ifeq          12
       7: iconst_2
       8: istore_3
       9: goto          14
      12: iconst_0
      13: istore_3
      14: aload_0
      15: getfield      #7                  // Field privateTrue:Z
      18: ifeq          53
      21: aconst_null
      22: astore        4
      24: iload_3
      25: iflt          36
      28: iload_3
      29: newarray       int
      31: astore        4
      33: goto          41
      36: ldc           #77                 // String Array size is negative
      38: invokestatic  #79                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      41: aload         4
      43: iconst_0
      44: iconst_5
      45: iastore
      46: aload         4
      48: iconst_0
      49: iaload
      50: invokestatic  #83                 // Method testcasesupport/IO.writeLine:(I)V
      53: return

  private void goodB2G1(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #7                  // Field privateTrue:Z
       4: ifeq          89
       7: ldc           #18                 // int -2147483648
       9: istore_3
      10: new           #19                 // class java/util/StringTokenizer
      13: dup
      14: aload_1
      15: invokeinterface #21,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getQueryString:()Ljava/lang/String;
      20: ldc           #27                 // String &
      22: invokespecial #29                 // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      25: astore        4
      27: aload         4
      29: invokevirtual #32                 // Method java/util/StringTokenizer.hasMoreTokens:()Z
      32: ifeq          86
      35: aload         4
      37: invokevirtual #36                 // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      40: astore        5
      42: aload         5
      44: ldc           #39                 // String id=
      46: invokevirtual #41                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      49: ifeq          83
      52: aload         5
      54: iconst_3
      55: invokevirtual #47                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      58: invokestatic  #51                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      61: istore_3
      62: goto          86
      65: astore        6
      67: getstatic     #57                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
      70: getstatic     #63                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      73: ldc           #69                 // String Number format exception reading id from query string
      75: aload         6
      77: invokevirtual #71                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      80: goto          86
      83: goto          27
      86: goto          91
      89: iconst_0
      90: istore_3
      91: aload_0
      92: getfield      #13                 // Field privateFalse:Z
      95: ifeq          106
      98: ldc           #86                 // String Benign, fixed string
     100: invokestatic  #79                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     103: goto          138
     106: aconst_null
     107: astore        4
     109: iload_3
     110: ifle          121
     113: iload_3
     114: newarray       int
     116: astore        4
     118: goto          126
     121: ldc           #77                 // String Array size is negative
     123: invokestatic  #79                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     126: aload         4
     128: iconst_0
     129: iconst_5
     130: iastore
     131: aload         4
     133: iconst_0
     134: iaload
     135: invokestatic  #83                 // Method testcasesupport/IO.writeLine:(I)V
     138: return
    Exception table:
       from    to  target type
          52    62    65   Class java/lang/NumberFormatException

  private void goodB2G2(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #7                  // Field privateTrue:Z
       4: ifeq          89
       7: ldc           #18                 // int -2147483648
       9: istore_3
      10: new           #19                 // class java/util/StringTokenizer
      13: dup
      14: aload_1
      15: invokeinterface #21,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getQueryString:()Ljava/lang/String;
      20: ldc           #27                 // String &
      22: invokespecial #29                 // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      25: astore        4
      27: aload         4
      29: invokevirtual #32                 // Method java/util/StringTokenizer.hasMoreTokens:()Z
      32: ifeq          86
      35: aload         4
      37: invokevirtual #36                 // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      40: astore        5
      42: aload         5
      44: ldc           #39                 // String id=
      46: invokevirtual #41                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      49: ifeq          83
      52: aload         5
      54: iconst_3
      55: invokevirtual #47                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      58: invokestatic  #51                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      61: istore_3
      62: goto          86
      65: astore        6
      67: getstatic     #57                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
      70: getstatic     #63                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      73: ldc           #69                 // String Number format exception reading id from query string
      75: aload         6
      77: invokevirtual #71                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      80: goto          86
      83: goto          27
      86: goto          91
      89: iconst_0
      90: istore_3
      91: aload_0
      92: getfield      #7                  // Field privateTrue:Z
      95: ifeq          130
      98: aconst_null
      99: astore        4
     101: iload_3
     102: ifle          113
     105: iload_3
     106: newarray       int
     108: astore        4
     110: goto          118
     113: ldc           #77                 // String Array size is negative
     115: invokestatic  #79                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     118: aload         4
     120: iconst_0
     121: iconst_5
     122: iastore
     123: aload         4
     125: iconst_0
     126: iaload
     127: invokestatic  #83                 // Method testcasesupport/IO.writeLine:(I)V
     130: return
    Exception table:
       from    to  target type
          52    62    65   Class java/lang/NumberFormatException

  public void good(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #88                 // Method goodG2B1:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokevirtual #92                 // Method goodG2B2:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokevirtual #95                 // Method goodB2G1:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      18: aload_0
      19: aload_1
      20: aload_2
      21: invokevirtual #98                 // Method goodB2G2:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      24: return

  public static void main(java.lang.String[]) throws java.lang.ClassNotFoundException, java.lang.InstantiationException, java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: invokestatic  #101                // Method mainFromParent:([Ljava/lang/String;)V
       4: return
}
