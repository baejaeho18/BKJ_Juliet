Compiled from "CWE190_Integer_Overflow__int_getQueryString_Servlet_square_21.java"
public class testcases.CWE190_Integer_Overflow.s03.CWE190_Integer_Overflow__int_getQueryString_Servlet_square_21 extends testcasesupport.AbstractTestCaseServlet {
  private boolean badPrivate;

  private boolean goodB2G1Private;

  private boolean goodB2G2Private;

  private boolean goodG2BPrivate;

  public testcases.CWE190_Integer_Overflow.s03.CWE190_Integer_Overflow__int_getQueryString_Servlet_square_21();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method testcasesupport/AbstractTestCaseServlet."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #7                  // Field badPrivate:Z
       9: aload_0
      10: iconst_0
      11: putfield      #13                 // Field goodB2G1Private:Z
      14: aload_0
      15: iconst_0
      16: putfield      #16                 // Field goodB2G2Private:Z
      19: aload_0
      20: iconst_0
      21: putfield      #19                 // Field goodG2BPrivate:Z
      24: return

  public void bad(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: ldc           #24                 // int -2147483648
       2: istore_3
       3: new           #25                 // class java/util/StringTokenizer
       6: dup
       7: aload_1
       8: invokeinterface #27,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getQueryString:()Ljava/lang/String;
      13: ldc           #33                 // String &
      15: invokespecial #35                 // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      18: astore        4
      20: aload         4
      22: invokevirtual #38                 // Method java/util/StringTokenizer.hasMoreTokens:()Z
      25: ifeq          79
      28: aload         4
      30: invokevirtual #42                 // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      33: astore        5
      35: aload         5
      37: ldc           #45                 // String id=
      39: invokevirtual #47                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      42: ifeq          76
      45: aload         5
      47: iconst_3
      48: invokevirtual #53                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      51: invokestatic  #57                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      54: istore_3
      55: goto          79
      58: astore        6
      60: getstatic     #63                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
      63: getstatic     #69                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      66: ldc           #75                 // String Number format exception reading id from query string
      68: aload         6
      70: invokevirtual #77                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      73: goto          79
      76: goto          20
      79: aload_0
      80: iconst_1
      81: putfield      #7                  // Field badPrivate:Z
      84: aload_0
      85: iload_3
      86: aload_1
      87: aload_2
      88: invokevirtual #83                 // Method badSink:(ILjavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      91: return
    Exception table:
       from    to  target type
          45    55    58   Class java/lang/NumberFormatException

  private void badSink(int, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #7                  // Field badPrivate:Z
       4: ifeq          22
       7: iload_1
       8: iload_1
       9: imul
      10: istore        4
      12: iload         4
      14: invokedynamic #87,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      19: invokestatic  #90                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      22: return

  public void good(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #94                 // Method goodB2G1:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokevirtual #98                 // Method goodB2G2:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokevirtual #101                // Method goodG2B:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      18: return

  private void goodB2G1(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: ldc           #24                 // int -2147483648
       2: istore_3
       3: new           #25                 // class java/util/StringTokenizer
       6: dup
       7: aload_1
       8: invokeinterface #27,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getQueryString:()Ljava/lang/String;
      13: ldc           #33                 // String &
      15: invokespecial #35                 // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      18: astore        4
      20: aload         4
      22: invokevirtual #38                 // Method java/util/StringTokenizer.hasMoreTokens:()Z
      25: ifeq          79
      28: aload         4
      30: invokevirtual #42                 // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      33: astore        5
      35: aload         5
      37: ldc           #45                 // String id=
      39: invokevirtual #47                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      42: ifeq          76
      45: aload         5
      47: iconst_3
      48: invokevirtual #53                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      51: invokestatic  #57                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      54: istore_3
      55: goto          79
      58: astore        6
      60: getstatic     #63                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
      63: getstatic     #69                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      66: ldc           #75                 // String Number format exception reading id from query string
      68: aload         6
      70: invokevirtual #77                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      73: goto          79
      76: goto          20
      79: aload_0
      80: iconst_0
      81: putfield      #13                 // Field goodB2G1Private:Z
      84: aload_0
      85: iload_3
      86: aload_1
      87: aload_2
      88: invokevirtual #104                // Method goodB2G1Sink:(ILjavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      91: return
    Exception table:
       from    to  target type
          45    55    58   Class java/lang/NumberFormatException

  private void goodB2G1Sink(int, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #13                 // Field goodB2G1Private:Z
       4: ifeq          15
       7: ldc           #107                // String Benign, fixed string
       9: invokestatic  #90                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      12: goto          69
      15: iload_1
      16: ldc           #24                 // int -2147483648
      18: if_icmpeq     64
      21: iload_1
      22: i2l
      23: ldc2_w        #111                // long -9223372036854775808l
      26: lcmp
      27: ifeq          64
      30: iload_1
      31: invokestatic  #113                // Method java/lang/Math.abs:(I)I
      34: i2l
      35: ldc2_w        #119                // double 2.147483647E9d
      38: invokestatic  #121                // Method java/lang/Math.sqrt:(D)D
      41: d2l
      42: lcmp
      43: ifgt          64
      46: iload_1
      47: iload_1
      48: imul
      49: istore        4
      51: iload         4
      53: invokedynamic #87,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      58: invokestatic  #90                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      61: goto          69
      64: ldc           #125                // String data value is too large to perform squaring.
      66: invokestatic  #90                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      69: return

  private void goodB2G2(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: ldc           #24                 // int -2147483648
       2: istore_3
       3: new           #25                 // class java/util/StringTokenizer
       6: dup
       7: aload_1
       8: invokeinterface #27,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getQueryString:()Ljava/lang/String;
      13: ldc           #33                 // String &
      15: invokespecial #35                 // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      18: astore        4
      20: aload         4
      22: invokevirtual #38                 // Method java/util/StringTokenizer.hasMoreTokens:()Z
      25: ifeq          79
      28: aload         4
      30: invokevirtual #42                 // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      33: astore        5
      35: aload         5
      37: ldc           #45                 // String id=
      39: invokevirtual #47                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      42: ifeq          76
      45: aload         5
      47: iconst_3
      48: invokevirtual #53                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      51: invokestatic  #57                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      54: istore_3
      55: goto          79
      58: astore        6
      60: getstatic     #63                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
      63: getstatic     #69                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      66: ldc           #75                 // String Number format exception reading id from query string
      68: aload         6
      70: invokevirtual #77                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      73: goto          79
      76: goto          20
      79: aload_0
      80: iconst_1
      81: putfield      #16                 // Field goodB2G2Private:Z
      84: aload_0
      85: iload_3
      86: aload_1
      87: aload_2
      88: invokevirtual #127                // Method goodB2G2Sink:(ILjavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      91: return
    Exception table:
       from    to  target type
          45    55    58   Class java/lang/NumberFormatException

  private void goodB2G2Sink(int, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #16                 // Field goodB2G2Private:Z
       4: ifeq          61
       7: iload_1
       8: ldc           #24                 // int -2147483648
      10: if_icmpeq     56
      13: iload_1
      14: i2l
      15: ldc2_w        #111                // long -9223372036854775808l
      18: lcmp
      19: ifeq          56
      22: iload_1
      23: invokestatic  #113                // Method java/lang/Math.abs:(I)I
      26: i2l
      27: ldc2_w        #119                // double 2.147483647E9d
      30: invokestatic  #121                // Method java/lang/Math.sqrt:(D)D
      33: d2l
      34: lcmp
      35: ifgt          56
      38: iload_1
      39: iload_1
      40: imul
      41: istore        4
      43: iload         4
      45: invokedynamic #87,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      50: invokestatic  #90                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      53: goto          61
      56: ldc           #125                // String data value is too large to perform squaring.
      58: invokestatic  #90                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      61: return

  private void goodG2B(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: iconst_2
       1: istore_3
       2: aload_0
       3: iconst_1
       4: putfield      #19                 // Field goodG2BPrivate:Z
       7: aload_0
       8: iload_3
       9: aload_1
      10: aload_2
      11: invokevirtual #130                // Method goodG2BSink:(ILjavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      14: return

  private void goodG2BSink(int, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #19                 // Field goodG2BPrivate:Z
       4: ifeq          22
       7: iload_1
       8: iload_1
       9: imul
      10: istore        4
      12: iload         4
      14: invokedynamic #87,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      19: invokestatic  #90                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      22: return

  public static void main(java.lang.String[]) throws java.lang.ClassNotFoundException, java.lang.InstantiationException, java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: invokestatic  #133                // Method mainFromParent:([Ljava/lang/String;)V
       4: return
}
