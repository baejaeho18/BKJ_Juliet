Compiled from "CWE190_Integer_Overflow__int_random_square_07.java"
public class testcases.CWE190_Integer_Overflow.s03.CWE190_Integer_Overflow__int_random_square_07 extends testcasesupport.AbstractTestCase {
  private int privateFive;

  public testcases.CWE190_Integer_Overflow.s03.CWE190_Integer_Overflow__int_random_square_07();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method testcasesupport/AbstractTestCase."<init>":()V
       4: aload_0
       5: iconst_5
       6: putfield      #7                  // Field privateFive:I
       9: return

  public void bad() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #7                  // Field privateFive:I
       4: iconst_5
       5: if_icmpne     22
       8: new           #13                 // class java/security/SecureRandom
      11: dup
      12: invokespecial #15                 // Method java/security/SecureRandom."<init>":()V
      15: invokevirtual #16                 // Method java/security/SecureRandom.nextInt:()I
      18: istore_1
      19: goto          24
      22: iconst_0
      23: istore_1
      24: aload_0
      25: getfield      #7                  // Field privateFive:I
      28: iconst_5
      29: if_icmpne     45
      32: iload_1
      33: iload_1
      34: imul
      35: istore_2
      36: iload_2
      37: invokedynamic #20,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      42: invokestatic  #24                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      45: return

  private void goodG2B1() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #7                  // Field privateFive:I
       4: iconst_5
       5: if_icmpeq     13
       8: iconst_0
       9: istore_1
      10: goto          15
      13: iconst_2
      14: istore_1
      15: aload_0
      16: getfield      #7                  // Field privateFive:I
      19: iconst_5
      20: if_icmpne     36
      23: iload_1
      24: iload_1
      25: imul
      26: istore_2
      27: iload_2
      28: invokedynamic #20,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      33: invokestatic  #24                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      36: return

  private void goodG2B2() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #7                  // Field privateFive:I
       4: iconst_5
       5: if_icmpne     13
       8: iconst_2
       9: istore_1
      10: goto          15
      13: iconst_0
      14: istore_1
      15: aload_0
      16: getfield      #7                  // Field privateFive:I
      19: iconst_5
      20: if_icmpne     36
      23: iload_1
      24: iload_1
      25: imul
      26: istore_2
      27: iload_2
      28: invokedynamic #20,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      33: invokestatic  #24                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      36: return

  private void goodB2G1() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #7                  // Field privateFive:I
       4: iconst_5
       5: if_icmpne     22
       8: new           #13                 // class java/security/SecureRandom
      11: dup
      12: invokespecial #15                 // Method java/security/SecureRandom."<init>":()V
      15: invokevirtual #16                 // Method java/security/SecureRandom.nextInt:()I
      18: istore_1
      19: goto          24
      22: iconst_0
      23: istore_1
      24: aload_0
      25: getfield      #7                  // Field privateFive:I
      28: iconst_5
      29: if_icmpeq     40
      32: ldc           #30                 // String Benign, fixed string
      34: invokestatic  #24                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      37: goto          92
      40: iload_1
      41: ldc           #34                 // int -2147483648
      43: if_icmpeq     87
      46: iload_1
      47: i2l
      48: ldc2_w        #37                 // long -9223372036854775808l
      51: lcmp
      52: ifeq          87
      55: iload_1
      56: invokestatic  #39                 // Method java/lang/Math.abs:(I)I
      59: i2l
      60: ldc2_w        #45                 // double 2.147483647E9d
      63: invokestatic  #47                 // Method java/lang/Math.sqrt:(D)D
      66: d2l
      67: lcmp
      68: ifgt          87
      71: iload_1
      72: iload_1
      73: imul
      74: istore_2
      75: iload_2
      76: invokedynamic #20,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      81: invokestatic  #24                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      84: goto          92
      87: ldc           #51                 // String data value is too large to perform squaring.
      89: invokestatic  #24                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      92: return

  private void goodB2G2() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #7                  // Field privateFive:I
       4: iconst_5
       5: if_icmpne     22
       8: new           #13                 // class java/security/SecureRandom
      11: dup
      12: invokespecial #15                 // Method java/security/SecureRandom."<init>":()V
      15: invokevirtual #16                 // Method java/security/SecureRandom.nextInt:()I
      18: istore_1
      19: goto          24
      22: iconst_0
      23: istore_1
      24: aload_0
      25: getfield      #7                  // Field privateFive:I
      28: iconst_5
      29: if_icmpne     84
      32: iload_1
      33: ldc           #34                 // int -2147483648
      35: if_icmpeq     79
      38: iload_1
      39: i2l
      40: ldc2_w        #37                 // long -9223372036854775808l
      43: lcmp
      44: ifeq          79
      47: iload_1
      48: invokestatic  #39                 // Method java/lang/Math.abs:(I)I
      51: i2l
      52: ldc2_w        #45                 // double 2.147483647E9d
      55: invokestatic  #47                 // Method java/lang/Math.sqrt:(D)D
      58: d2l
      59: lcmp
      60: ifgt          79
      63: iload_1
      64: iload_1
      65: imul
      66: istore_2
      67: iload_2
      68: invokedynamic #20,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      73: invokestatic  #24                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      76: goto          84
      79: ldc           #51                 // String data value is too large to perform squaring.
      81: invokestatic  #24                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      84: return

  public void good() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method goodG2B1:()V
       4: aload_0
       5: invokevirtual #56                 // Method goodG2B2:()V
       8: aload_0
       9: invokevirtual #59                 // Method goodB2G1:()V
      12: aload_0
      13: invokevirtual #62                 // Method goodB2G2:()V
      16: return

  public static void main(java.lang.String[]) throws java.lang.ClassNotFoundException, java.lang.InstantiationException, java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: invokestatic  #65                 // Method mainFromParent:([Ljava/lang/String;)V
       4: return
}
