Compiled from "CWE190_Integer_Overflow__long_max_add_21.java"
public class testcases.CWE190_Integer_Overflow.s04.CWE190_Integer_Overflow__long_max_add_21 extends testcasesupport.AbstractTestCase {
  private boolean badPrivate;

  private boolean goodB2G1Private;

  private boolean goodB2G2Private;

  private boolean goodG2BPrivate;

  public testcases.CWE190_Integer_Overflow.s04.CWE190_Integer_Overflow__long_max_add_21();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method testcasesupport/AbstractTestCase."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #7                  // Field badPrivate:Z
       9: aload_0
      10: iconst_0
      11: putfield      #13                 // Field goodB2G1Private:Z
      14: aload_0
      15: iconst_0
      16: putfield      #16                 // Field goodB2G2Private:Z
      19: aload_0
      20: iconst_0
      21: putfield      #19                 // Field goodG2BPrivate:Z
      24: return

  public void bad() throws java.lang.Throwable;
    Code:
       0: ldc2_w        #24                 // long 9223372036854775807l
       3: lstore_1
       4: aload_0
       5: iconst_1
       6: putfield      #7                  // Field badPrivate:Z
       9: aload_0
      10: lload_1
      11: invokevirtual #26                 // Method badSink:(J)V
      14: return

  private void badSink(long) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #7                  // Field badPrivate:Z
       4: ifeq          20
       7: lload_1
       8: lconst_1
       9: ladd
      10: lstore_3
      11: lload_3
      12: invokedynamic #30,  0             // InvokeDynamic #0:makeConcatWithConstants:(J)Ljava/lang/String;
      17: invokestatic  #34                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      20: return

  public void good() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method goodB2G1:()V
       4: aload_0
       5: invokevirtual #43                 // Method goodB2G2:()V
       8: aload_0
       9: invokevirtual #46                 // Method goodG2B:()V
      12: return

  private void goodB2G1() throws java.lang.Throwable;
    Code:
       0: ldc2_w        #24                 // long 9223372036854775807l
       3: lstore_1
       4: aload_0
       5: iconst_0
       6: putfield      #13                 // Field goodB2G1Private:Z
       9: aload_0
      10: lload_1
      11: invokevirtual #49                 // Method goodB2G1Sink:(J)V
      14: return

  private void goodB2G1Sink(long) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #13                 // Field goodB2G1Private:Z
       4: ifeq          15
       7: ldc           #52                 // String Benign, fixed string
       9: invokestatic  #34                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      12: goto          44
      15: lload_1
      16: ldc2_w        #24                 // long 9223372036854775807l
      19: lcmp
      20: ifge          39
      23: lload_1
      24: lconst_1
      25: ladd
      26: lstore_3
      27: lload_3
      28: invokedynamic #30,  0             // InvokeDynamic #0:makeConcatWithConstants:(J)Ljava/lang/String;
      33: invokestatic  #34                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      36: goto          44
      39: ldc           #54                 // String data value is too large to perform addition.
      41: invokestatic  #34                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      44: return

  private void goodB2G2() throws java.lang.Throwable;
    Code:
       0: ldc2_w        #24                 // long 9223372036854775807l
       3: lstore_1
       4: aload_0
       5: iconst_1
       6: putfield      #16                 // Field goodB2G2Private:Z
       9: aload_0
      10: lload_1
      11: invokevirtual #56                 // Method goodB2G2Sink:(J)V
      14: return

  private void goodB2G2Sink(long) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #16                 // Field goodB2G2Private:Z
       4: ifeq          36
       7: lload_1
       8: ldc2_w        #24                 // long 9223372036854775807l
      11: lcmp
      12: ifge          31
      15: lload_1
      16: lconst_1
      17: ladd
      18: lstore_3
      19: lload_3
      20: invokedynamic #30,  0             // InvokeDynamic #0:makeConcatWithConstants:(J)Ljava/lang/String;
      25: invokestatic  #34                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      28: goto          36
      31: ldc           #54                 // String data value is too large to perform addition.
      33: invokestatic  #34                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      36: return

  private void goodG2B() throws java.lang.Throwable;
    Code:
       0: ldc2_w        #59                 // long 2l
       3: lstore_1
       4: aload_0
       5: iconst_1
       6: putfield      #19                 // Field goodG2BPrivate:Z
       9: aload_0
      10: lload_1
      11: invokevirtual #61                 // Method goodG2BSink:(J)V
      14: return

  private void goodG2BSink(long) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #19                 // Field goodG2BPrivate:Z
       4: ifeq          20
       7: lload_1
       8: lconst_1
       9: ladd
      10: lstore_3
      11: lload_3
      12: invokedynamic #30,  0             // InvokeDynamic #0:makeConcatWithConstants:(J)Ljava/lang/String;
      17: invokestatic  #34                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      20: return

  public static void main(java.lang.String[]) throws java.lang.ClassNotFoundException, java.lang.InstantiationException, java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: invokestatic  #64                 // Method mainFromParent:([Ljava/lang/String;)V
       4: return
}
