Compiled from "CWE190_Integer_Overflow__int_getQueryString_Servlet_preinc_07.java"
public class testcases.CWE190_Integer_Overflow.s07.CWE190_Integer_Overflow__int_getQueryString_Servlet_preinc_07 extends testcasesupport.AbstractTestCaseServlet {
  private int privateFive;

  public testcases.CWE190_Integer_Overflow.s07.CWE190_Integer_Overflow__int_getQueryString_Servlet_preinc_07();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method testcasesupport/AbstractTestCaseServlet."<init>":()V
       4: aload_0
       5: iconst_5
       6: putfield      #7                  // Field privateFive:I
       9: return

  public void bad(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #7                  // Field privateFive:I
       4: iconst_5
       5: if_icmpne     90
       8: ldc           #15                 // int -2147483648
      10: istore_3
      11: new           #16                 // class java/util/StringTokenizer
      14: dup
      15: aload_1
      16: invokeinterface #18,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getQueryString:()Ljava/lang/String;
      21: ldc           #24                 // String &
      23: invokespecial #26                 // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      26: astore        4
      28: aload         4
      30: invokevirtual #29                 // Method java/util/StringTokenizer.hasMoreTokens:()Z
      33: ifeq          87
      36: aload         4
      38: invokevirtual #33                 // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      41: astore        5
      43: aload         5
      45: ldc           #36                 // String id=
      47: invokevirtual #38                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      50: ifeq          84
      53: aload         5
      55: iconst_3
      56: invokevirtual #44                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      59: invokestatic  #48                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      62: istore_3
      63: goto          87
      66: astore        6
      68: getstatic     #54                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
      71: getstatic     #60                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      74: ldc           #66                 // String Number format exception reading id from query string
      76: aload         6
      78: invokevirtual #68                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      81: goto          87
      84: goto          28
      87: goto          92
      90: iconst_0
      91: istore_3
      92: aload_0
      93: getfield      #7                  // Field privateFive:I
      96: iconst_5
      97: if_icmpne     116
     100: iinc          3, 1
     103: iload_3
     104: istore        4
     106: iload         4
     108: invokedynamic #74,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
     113: invokestatic  #77                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     116: return
    Exception table:
       from    to  target type
          53    63    66   Class java/lang/NumberFormatException

  private void goodG2B1(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #7                  // Field privateFive:I
       4: iconst_5
       5: if_icmpeq     13
       8: iconst_0
       9: istore_3
      10: goto          15
      13: iconst_2
      14: istore_3
      15: aload_0
      16: getfield      #7                  // Field privateFive:I
      19: iconst_5
      20: if_icmpne     39
      23: iinc          3, 1
      26: iload_3
      27: istore        4
      29: iload         4
      31: invokedynamic #74,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      36: invokestatic  #77                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      39: return

  private void goodG2B2(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #7                  // Field privateFive:I
       4: iconst_5
       5: if_icmpne     13
       8: iconst_2
       9: istore_3
      10: goto          15
      13: iconst_0
      14: istore_3
      15: aload_0
      16: getfield      #7                  // Field privateFive:I
      19: iconst_5
      20: if_icmpne     39
      23: iinc          3, 1
      26: iload_3
      27: istore        4
      29: iload         4
      31: invokedynamic #74,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      36: invokestatic  #77                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      39: return

  private void goodB2G1(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #7                  // Field privateFive:I
       4: iconst_5
       5: if_icmpne     90
       8: ldc           #15                 // int -2147483648
      10: istore_3
      11: new           #16                 // class java/util/StringTokenizer
      14: dup
      15: aload_1
      16: invokeinterface #18,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getQueryString:()Ljava/lang/String;
      21: ldc           #24                 // String &
      23: invokespecial #26                 // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      26: astore        4
      28: aload         4
      30: invokevirtual #29                 // Method java/util/StringTokenizer.hasMoreTokens:()Z
      33: ifeq          87
      36: aload         4
      38: invokevirtual #33                 // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      41: astore        5
      43: aload         5
      45: ldc           #36                 // String id=
      47: invokevirtual #38                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      50: ifeq          84
      53: aload         5
      55: iconst_3
      56: invokevirtual #44                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      59: invokestatic  #48                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      62: istore_3
      63: goto          87
      66: astore        6
      68: getstatic     #54                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
      71: getstatic     #60                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      74: ldc           #66                 // String Number format exception reading id from query string
      76: aload         6
      78: invokevirtual #68                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      81: goto          87
      84: goto          28
      87: goto          92
      90: iconst_0
      91: istore_3
      92: aload_0
      93: getfield      #7                  // Field privateFive:I
      96: iconst_5
      97: if_icmpeq     108
     100: ldc           #81                 // String Benign, fixed string
     102: invokestatic  #77                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     105: goto          138
     108: iload_3
     109: ldc           #83                 // int 2147483647
     111: if_icmpge     133
     114: iinc          3, 1
     117: iload_3
     118: istore        4
     120: iload         4
     122: invokedynamic #74,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
     127: invokestatic  #77                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     130: goto          138
     133: ldc           #84                 // String data value is too large to increment.
     135: invokestatic  #77                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     138: return
    Exception table:
       from    to  target type
          53    63    66   Class java/lang/NumberFormatException

  private void goodB2G2(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #7                  // Field privateFive:I
       4: iconst_5
       5: if_icmpne     90
       8: ldc           #15                 // int -2147483648
      10: istore_3
      11: new           #16                 // class java/util/StringTokenizer
      14: dup
      15: aload_1
      16: invokeinterface #18,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getQueryString:()Ljava/lang/String;
      21: ldc           #24                 // String &
      23: invokespecial #26                 // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      26: astore        4
      28: aload         4
      30: invokevirtual #29                 // Method java/util/StringTokenizer.hasMoreTokens:()Z
      33: ifeq          87
      36: aload         4
      38: invokevirtual #33                 // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      41: astore        5
      43: aload         5
      45: ldc           #36                 // String id=
      47: invokevirtual #38                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      50: ifeq          84
      53: aload         5
      55: iconst_3
      56: invokevirtual #44                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      59: invokestatic  #48                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      62: istore_3
      63: goto          87
      66: astore        6
      68: getstatic     #54                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
      71: getstatic     #60                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      74: ldc           #66                 // String Number format exception reading id from query string
      76: aload         6
      78: invokevirtual #68                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      81: goto          87
      84: goto          28
      87: goto          92
      90: iconst_0
      91: istore_3
      92: aload_0
      93: getfield      #7                  // Field privateFive:I
      96: iconst_5
      97: if_icmpne     130
     100: iload_3
     101: ldc           #83                 // int 2147483647
     103: if_icmpge     125
     106: iinc          3, 1
     109: iload_3
     110: istore        4
     112: iload         4
     114: invokedynamic #74,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
     119: invokestatic  #77                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     122: goto          130
     125: ldc           #84                 // String data value is too large to increment.
     127: invokestatic  #77                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     130: return
    Exception table:
       from    to  target type
          53    63    66   Class java/lang/NumberFormatException

  public void good(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #86                 // Method goodG2B1:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokevirtual #90                 // Method goodG2B2:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokevirtual #93                 // Method goodB2G1:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      18: aload_0
      19: aload_1
      20: aload_2
      21: invokevirtual #96                 // Method goodB2G2:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      24: return

  public static void main(java.lang.String[]) throws java.lang.ClassNotFoundException, java.lang.InstantiationException, java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: invokestatic  #99                 // Method mainFromParent:([Ljava/lang/String;)V
       4: return
}
