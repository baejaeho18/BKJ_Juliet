Compiled from "CWE190_Integer_Overflow__int_getCookies_Servlet_square_05.java"
public class testcases.CWE190_Integer_Overflow.s02.CWE190_Integer_Overflow__int_getCookies_Servlet_square_05 extends testcasesupport.AbstractTestCaseServlet {
  private boolean privateTrue;

  private boolean privateFalse;

  public testcases.CWE190_Integer_Overflow.s02.CWE190_Integer_Overflow__int_getCookies_Servlet_square_05();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method testcasesupport/AbstractTestCaseServlet."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #7                  // Field privateTrue:Z
       9: aload_0
      10: iconst_0
      11: putfield      #13                 // Field privateFalse:Z
      14: return

  public void bad(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #7                  // Field privateTrue:Z
       4: ifeq          62
       7: ldc           #18                 // int -2147483648
       9: istore_3
      10: aload_1
      11: invokeinterface #19,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getCookies:()[Ljavax/servlet/http/Cookie;
      16: astore        4
      18: aload         4
      20: ifnull        59
      23: aload         4
      25: iconst_0
      26: aaload
      27: invokevirtual #25                 // Method javax/servlet/http/Cookie.getValue:()Ljava/lang/String;
      30: astore        5
      32: aload         5
      34: invokevirtual #31                 // Method java/lang/String.trim:()Ljava/lang/String;
      37: invokestatic  #36                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      40: istore_3
      41: goto          59
      44: astore        6
      46: getstatic     #42                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
      49: getstatic     #48                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      52: ldc           #54                 // String Number format exception reading data from cookie
      54: aload         6
      56: invokevirtual #56                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      59: goto          64
      62: iconst_0
      63: istore_3
      64: aload_0
      65: getfield      #7                  // Field privateTrue:Z
      68: ifeq          86
      71: iload_3
      72: iload_3
      73: imul
      74: istore        4
      76: iload         4
      78: invokedynamic #62,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      83: invokestatic  #66                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      86: return
    Exception table:
       from    to  target type
          32    41    44   Class java/lang/NumberFormatException

  private void goodG2B1(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #13                 // Field privateFalse:Z
       4: ifeq          12
       7: iconst_0
       8: istore_3
       9: goto          14
      12: iconst_2
      13: istore_3
      14: aload_0
      15: getfield      #7                  // Field privateTrue:Z
      18: ifeq          36
      21: iload_3
      22: iload_3
      23: imul
      24: istore        4
      26: iload         4
      28: invokedynamic #62,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      33: invokestatic  #66                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      36: return

  private void goodG2B2(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #7                  // Field privateTrue:Z
       4: ifeq          12
       7: iconst_2
       8: istore_3
       9: goto          14
      12: iconst_0
      13: istore_3
      14: aload_0
      15: getfield      #7                  // Field privateTrue:Z
      18: ifeq          36
      21: iload_3
      22: iload_3
      23: imul
      24: istore        4
      26: iload         4
      28: invokedynamic #62,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      33: invokestatic  #66                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      36: return

  private void goodB2G1(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #7                  // Field privateTrue:Z
       4: ifeq          62
       7: ldc           #18                 // int -2147483648
       9: istore_3
      10: aload_1
      11: invokeinterface #19,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getCookies:()[Ljavax/servlet/http/Cookie;
      16: astore        4
      18: aload         4
      20: ifnull        59
      23: aload         4
      25: iconst_0
      26: aaload
      27: invokevirtual #25                 // Method javax/servlet/http/Cookie.getValue:()Ljava/lang/String;
      30: astore        5
      32: aload         5
      34: invokevirtual #31                 // Method java/lang/String.trim:()Ljava/lang/String;
      37: invokestatic  #36                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      40: istore_3
      41: goto          59
      44: astore        6
      46: getstatic     #42                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
      49: getstatic     #48                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      52: ldc           #54                 // String Number format exception reading data from cookie
      54: aload         6
      56: invokevirtual #56                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      59: goto          64
      62: iconst_0
      63: istore_3
      64: aload_0
      65: getfield      #13                 // Field privateFalse:Z
      68: ifeq          79
      71: ldc           #70                 // String Benign, fixed string
      73: invokestatic  #66                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      76: goto          133
      79: iload_3
      80: ldc           #18                 // int -2147483648
      82: if_icmpeq     128
      85: iload_3
      86: i2l
      87: ldc2_w        #74                 // long -9223372036854775808l
      90: lcmp
      91: ifeq          128
      94: iload_3
      95: invokestatic  #76                 // Method java/lang/Math.abs:(I)I
      98: i2l
      99: ldc2_w        #82                 // double 2.147483647E9d
     102: invokestatic  #84                 // Method java/lang/Math.sqrt:(D)D
     105: d2l
     106: lcmp
     107: ifgt          128
     110: iload_3
     111: iload_3
     112: imul
     113: istore        4
     115: iload         4
     117: invokedynamic #62,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
     122: invokestatic  #66                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     125: goto          133
     128: ldc           #88                 // String data value is too large to perform squaring.
     130: invokestatic  #66                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     133: return
    Exception table:
       from    to  target type
          32    41    44   Class java/lang/NumberFormatException

  private void goodB2G2(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #7                  // Field privateTrue:Z
       4: ifeq          62
       7: ldc           #18                 // int -2147483648
       9: istore_3
      10: aload_1
      11: invokeinterface #19,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getCookies:()[Ljavax/servlet/http/Cookie;
      16: astore        4
      18: aload         4
      20: ifnull        59
      23: aload         4
      25: iconst_0
      26: aaload
      27: invokevirtual #25                 // Method javax/servlet/http/Cookie.getValue:()Ljava/lang/String;
      30: astore        5
      32: aload         5
      34: invokevirtual #31                 // Method java/lang/String.trim:()Ljava/lang/String;
      37: invokestatic  #36                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      40: istore_3
      41: goto          59
      44: astore        6
      46: getstatic     #42                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
      49: getstatic     #48                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      52: ldc           #54                 // String Number format exception reading data from cookie
      54: aload         6
      56: invokevirtual #56                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      59: goto          64
      62: iconst_0
      63: istore_3
      64: aload_0
      65: getfield      #7                  // Field privateTrue:Z
      68: ifeq          125
      71: iload_3
      72: ldc           #18                 // int -2147483648
      74: if_icmpeq     120
      77: iload_3
      78: i2l
      79: ldc2_w        #74                 // long -9223372036854775808l
      82: lcmp
      83: ifeq          120
      86: iload_3
      87: invokestatic  #76                 // Method java/lang/Math.abs:(I)I
      90: i2l
      91: ldc2_w        #82                 // double 2.147483647E9d
      94: invokestatic  #84                 // Method java/lang/Math.sqrt:(D)D
      97: d2l
      98: lcmp
      99: ifgt          120
     102: iload_3
     103: iload_3
     104: imul
     105: istore        4
     107: iload         4
     109: invokedynamic #62,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
     114: invokestatic  #66                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     117: goto          125
     120: ldc           #88                 // String data value is too large to perform squaring.
     122: invokestatic  #66                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     125: return
    Exception table:
       from    to  target type
          32    41    44   Class java/lang/NumberFormatException

  public void good(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #90                 // Method goodG2B1:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokevirtual #94                 // Method goodG2B2:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokevirtual #97                 // Method goodB2G1:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      18: aload_0
      19: aload_1
      20: aload_2
      21: invokevirtual #100                // Method goodB2G2:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      24: return

  public static void main(java.lang.String[]) throws java.lang.ClassNotFoundException, java.lang.InstantiationException, java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: invokestatic  #103                // Method mainFromParent:([Ljava/lang/String;)V
       4: return
}
