Compiled from "CWE190_Integer_Overflow__int_getParameter_Servlet_multiply_21.java"
public class testcases.CWE190_Integer_Overflow.s02.CWE190_Integer_Overflow__int_getParameter_Servlet_multiply_21 extends testcasesupport.AbstractTestCaseServlet {
  private boolean badPrivate;

  private boolean goodB2G1Private;

  private boolean goodB2G2Private;

  private boolean goodG2BPrivate;

  public testcases.CWE190_Integer_Overflow.s02.CWE190_Integer_Overflow__int_getParameter_Servlet_multiply_21();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method testcasesupport/AbstractTestCaseServlet."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #7                  // Field badPrivate:Z
       9: aload_0
      10: iconst_0
      11: putfield      #13                 // Field goodB2G1Private:Z
      14: aload_0
      15: iconst_0
      16: putfield      #16                 // Field goodB2G2Private:Z
      19: aload_0
      20: iconst_0
      21: putfield      #19                 // Field goodG2BPrivate:Z
      24: return

  public void bad(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: ldc           #24                 // int -2147483648
       2: istore_3
       3: aload_1
       4: ldc           #25                 // String name
       6: invokeinterface #27,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getParameter:(Ljava/lang/String;)Ljava/lang/String;
      11: astore        4
      13: aload         4
      15: invokevirtual #33                 // Method java/lang/String.trim:()Ljava/lang/String;
      18: invokestatic  #39                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      21: istore_3
      22: goto          40
      25: astore        5
      27: getstatic     #45                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
      30: getstatic     #51                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      33: ldc           #57                 // String Number format exception reading data from parameter \'name\'
      35: aload         5
      37: invokevirtual #59                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      40: aload_0
      41: iconst_1
      42: putfield      #7                  // Field badPrivate:Z
      45: aload_0
      46: iload_3
      47: aload_1
      48: aload_2
      49: invokevirtual #65                 // Method badSink:(ILjavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      52: return
    Exception table:
       from    to  target type
          13    22    25   Class java/lang/NumberFormatException

  private void badSink(int, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #7                  // Field badPrivate:Z
       4: ifeq          26
       7: iload_1
       8: ifle          26
      11: iload_1
      12: iconst_2
      13: imul
      14: istore        4
      16: iload         4
      18: invokedynamic #69,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      23: invokestatic  #73                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      26: return

  public void good(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #77                 // Method goodB2G1:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokevirtual #81                 // Method goodB2G2:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokevirtual #84                 // Method goodG2B:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      18: return

  private void goodB2G1(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: ldc           #24                 // int -2147483648
       2: istore_3
       3: aload_1
       4: ldc           #25                 // String name
       6: invokeinterface #27,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getParameter:(Ljava/lang/String;)Ljava/lang/String;
      11: astore        4
      13: aload         4
      15: invokevirtual #33                 // Method java/lang/String.trim:()Ljava/lang/String;
      18: invokestatic  #39                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      21: istore_3
      22: goto          40
      25: astore        5
      27: getstatic     #45                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
      30: getstatic     #51                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      33: ldc           #57                 // String Number format exception reading data from parameter \'name\'
      35: aload         5
      37: invokevirtual #59                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      40: aload_0
      41: iconst_0
      42: putfield      #13                 // Field goodB2G1Private:Z
      45: aload_0
      46: iload_3
      47: aload_1
      48: aload_2
      49: invokevirtual #87                 // Method goodB2G1Sink:(ILjavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      52: return
    Exception table:
       from    to  target type
          13    22    25   Class java/lang/NumberFormatException

  private void goodB2G1Sink(int, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #13                 // Field goodB2G1Private:Z
       4: ifeq          15
       7: ldc           #90                 // String Benign, fixed string
       9: invokestatic  #73                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      12: goto          48
      15: iload_1
      16: ifle          48
      19: iload_1
      20: ldc           #92                 // int 1073741823
      22: if_icmpge     43
      25: iload_1
      26: iconst_2
      27: imul
      28: istore        4
      30: iload         4
      32: invokedynamic #69,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      37: invokestatic  #73                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      40: goto          48
      43: ldc           #93                 // String data value is too large to perform multiplication.
      45: invokestatic  #73                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      48: return

  private void goodB2G2(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: ldc           #24                 // int -2147483648
       2: istore_3
       3: aload_1
       4: ldc           #25                 // String name
       6: invokeinterface #27,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getParameter:(Ljava/lang/String;)Ljava/lang/String;
      11: astore        4
      13: aload         4
      15: invokevirtual #33                 // Method java/lang/String.trim:()Ljava/lang/String;
      18: invokestatic  #39                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      21: istore_3
      22: goto          40
      25: astore        5
      27: getstatic     #45                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
      30: getstatic     #51                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      33: ldc           #57                 // String Number format exception reading data from parameter \'name\'
      35: aload         5
      37: invokevirtual #59                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      40: aload_0
      41: iconst_1
      42: putfield      #16                 // Field goodB2G2Private:Z
      45: aload_0
      46: iload_3
      47: aload_1
      48: aload_2
      49: invokevirtual #95                 // Method goodB2G2Sink:(ILjavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      52: return
    Exception table:
       from    to  target type
          13    22    25   Class java/lang/NumberFormatException

  private void goodB2G2Sink(int, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #16                 // Field goodB2G2Private:Z
       4: ifeq          40
       7: iload_1
       8: ifle          40
      11: iload_1
      12: ldc           #92                 // int 1073741823
      14: if_icmpge     35
      17: iload_1
      18: iconst_2
      19: imul
      20: istore        4
      22: iload         4
      24: invokedynamic #69,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      29: invokestatic  #73                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      32: goto          40
      35: ldc           #93                 // String data value is too large to perform multiplication.
      37: invokestatic  #73                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      40: return

  private void goodG2B(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: iconst_2
       1: istore_3
       2: aload_0
       3: iconst_1
       4: putfield      #19                 // Field goodG2BPrivate:Z
       7: aload_0
       8: iload_3
       9: aload_1
      10: aload_2
      11: invokevirtual #98                 // Method goodG2BSink:(ILjavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      14: return

  private void goodG2BSink(int, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #19                 // Field goodG2BPrivate:Z
       4: ifeq          26
       7: iload_1
       8: ifle          26
      11: iload_1
      12: iconst_2
      13: imul
      14: istore        4
      16: iload         4
      18: invokedynamic #69,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      23: invokestatic  #73                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      26: return

  public static void main(java.lang.String[]) throws java.lang.ClassNotFoundException, java.lang.InstantiationException, java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: invokestatic  #101                // Method mainFromParent:([Ljava/lang/String;)V
       4: return
}
