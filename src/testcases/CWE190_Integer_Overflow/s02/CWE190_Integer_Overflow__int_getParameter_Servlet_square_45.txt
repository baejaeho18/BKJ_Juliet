Compiled from "CWE190_Integer_Overflow__int_getParameter_Servlet_square_45.java"
public class testcases.CWE190_Integer_Overflow.s02.CWE190_Integer_Overflow__int_getParameter_Servlet_square_45 extends testcasesupport.AbstractTestCaseServlet {
  private int dataBad;

  private int dataGoodG2B;

  private int dataGoodB2G;

  public testcases.CWE190_Integer_Overflow.s02.CWE190_Integer_Overflow__int_getParameter_Servlet_square_45();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method testcasesupport/AbstractTestCaseServlet."<init>":()V
       4: return

  private void badSink(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #7                  // Field dataBad:I
       4: istore_3
       5: iload_3
       6: iload_3
       7: imul
       8: istore        4
      10: iload         4
      12: invokedynamic #13,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      17: invokestatic  #17                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      20: return

  public void bad(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: ldc           #25                 // int -2147483648
       2: istore_3
       3: aload_1
       4: ldc           #26                 // String name
       6: invokeinterface #28,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getParameter:(Ljava/lang/String;)Ljava/lang/String;
      11: astore        4
      13: aload         4
      15: invokevirtual #34                 // Method java/lang/String.trim:()Ljava/lang/String;
      18: invokestatic  #40                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      21: istore_3
      22: goto          40
      25: astore        5
      27: getstatic     #46                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
      30: getstatic     #50                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      33: ldc           #56                 // String Number format exception reading data from parameter \'name\'
      35: aload         5
      37: invokevirtual #58                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      40: aload_0
      41: iload_3
      42: putfield      #7                  // Field dataBad:I
      45: aload_0
      46: aload_1
      47: aload_2
      48: invokevirtual #64                 // Method badSink:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      51: return
    Exception table:
       from    to  target type
          13    22    25   Class java/lang/NumberFormatException

  public void good(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #68                 // Method goodG2B:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokevirtual #71                 // Method goodB2G:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      12: return

  private void goodG2BSink(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #74                 // Field dataGoodG2B:I
       4: istore_3
       5: iload_3
       6: iload_3
       7: imul
       8: istore        4
      10: iload         4
      12: invokedynamic #13,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      17: invokestatic  #17                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      20: return

  private void goodG2B(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: iconst_2
       1: istore_3
       2: aload_0
       3: iload_3
       4: putfield      #74                 // Field dataGoodG2B:I
       7: aload_0
       8: aload_1
       9: aload_2
      10: invokevirtual #77                 // Method goodG2BSink:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      13: return

  private void goodB2GSink(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #80                 // Field dataGoodB2G:I
       4: istore_3
       5: iload_3
       6: ldc           #25                 // int -2147483648
       8: if_icmpeq     54
      11: iload_3
      12: i2l
      13: ldc2_w        #85                 // long -9223372036854775808l
      16: lcmp
      17: ifeq          54
      20: iload_3
      21: invokestatic  #87                 // Method java/lang/Math.abs:(I)I
      24: i2l
      25: ldc2_w        #93                 // double 2.147483647E9d
      28: invokestatic  #95                 // Method java/lang/Math.sqrt:(D)D
      31: d2l
      32: lcmp
      33: ifgt          54
      36: iload_3
      37: iload_3
      38: imul
      39: istore        4
      41: iload         4
      43: invokedynamic #13,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      48: invokestatic  #17                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      51: goto          59
      54: ldc           #99                 // String data value is too large to perform squaring.
      56: invokestatic  #17                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      59: return

  private void goodB2G(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: ldc           #25                 // int -2147483648
       2: istore_3
       3: aload_1
       4: ldc           #26                 // String name
       6: invokeinterface #28,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getParameter:(Ljava/lang/String;)Ljava/lang/String;
      11: astore        4
      13: aload         4
      15: invokevirtual #34                 // Method java/lang/String.trim:()Ljava/lang/String;
      18: invokestatic  #40                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      21: istore_3
      22: goto          40
      25: astore        5
      27: getstatic     #46                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
      30: getstatic     #50                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      33: ldc           #56                 // String Number format exception reading data from parameter \'name\'
      35: aload         5
      37: invokevirtual #58                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      40: aload_0
      41: iload_3
      42: putfield      #80                 // Field dataGoodB2G:I
      45: aload_0
      46: aload_1
      47: aload_2
      48: invokevirtual #101                // Method goodB2GSink:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      51: return
    Exception table:
       from    to  target type
          13    22    25   Class java/lang/NumberFormatException

  public static void main(java.lang.String[]) throws java.lang.ClassNotFoundException, java.lang.InstantiationException, java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: invokestatic  #104                // Method mainFromParent:([Ljava/lang/String;)V
       4: return
}
