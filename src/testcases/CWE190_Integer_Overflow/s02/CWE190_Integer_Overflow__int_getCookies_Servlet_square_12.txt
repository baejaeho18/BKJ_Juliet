Compiled from "CWE190_Integer_Overflow__int_getCookies_Servlet_square_12.java"
public class testcases.CWE190_Integer_Overflow.s02.CWE190_Integer_Overflow__int_getCookies_Servlet_square_12 extends testcasesupport.AbstractTestCaseServlet {
  public testcases.CWE190_Integer_Overflow.s02.CWE190_Integer_Overflow__int_getCookies_Servlet_square_12();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method testcasesupport/AbstractTestCaseServlet."<init>":()V
       4: return

  public void bad(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: invokestatic  #7                  // Method testcasesupport/IO.staticReturnsTrueOrFalse:()Z
       3: ifeq          61
       6: ldc           #15                 // int -2147483648
       8: istore_3
       9: aload_1
      10: invokeinterface #16,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getCookies:()[Ljavax/servlet/http/Cookie;
      15: astore        4
      17: aload         4
      19: ifnull        58
      22: aload         4
      24: iconst_0
      25: aaload
      26: invokevirtual #22                 // Method javax/servlet/http/Cookie.getValue:()Ljava/lang/String;
      29: astore        5
      31: aload         5
      33: invokevirtual #28                 // Method java/lang/String.trim:()Ljava/lang/String;
      36: invokestatic  #33                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      39: istore_3
      40: goto          58
      43: astore        6
      45: getstatic     #39                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
      48: getstatic     #43                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      51: ldc           #49                 // String Number format exception reading data from cookie
      53: aload         6
      55: invokevirtual #51                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      58: goto          63
      61: iconst_2
      62: istore_3
      63: invokestatic  #7                  // Method testcasesupport/IO.staticReturnsTrueOrFalse:()Z
      66: ifeq          87
      69: iload_3
      70: iload_3
      71: imul
      72: istore        4
      74: iload         4
      76: invokedynamic #57,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      81: invokestatic  #61                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      84: goto          141
      87: iload_3
      88: ldc           #15                 // int -2147483648
      90: if_icmpeq     136
      93: iload_3
      94: i2l
      95: ldc2_w        #67                 // long -9223372036854775808l
      98: lcmp
      99: ifeq          136
     102: iload_3
     103: invokestatic  #69                 // Method java/lang/Math.abs:(I)I
     106: i2l
     107: ldc2_w        #75                 // double 2.147483647E9d
     110: invokestatic  #77                 // Method java/lang/Math.sqrt:(D)D
     113: d2l
     114: lcmp
     115: ifgt          136
     118: iload_3
     119: iload_3
     120: imul
     121: istore        4
     123: iload         4
     125: invokedynamic #57,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
     130: invokestatic  #61                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     133: goto          141
     136: ldc           #81                 // String data value is too large to perform squaring.
     138: invokestatic  #61                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     141: return
    Exception table:
       from    to  target type
          31    40    43   Class java/lang/NumberFormatException

  private void goodG2B(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: invokestatic  #7                  // Method testcasesupport/IO.staticReturnsTrueOrFalse:()Z
       3: ifeq          11
       6: iconst_2
       7: istore_3
       8: goto          13
      11: iconst_2
      12: istore_3
      13: invokestatic  #7                  // Method testcasesupport/IO.staticReturnsTrueOrFalse:()Z
      16: ifeq          37
      19: iload_3
      20: iload_3
      21: imul
      22: istore        4
      24: iload         4
      26: invokedynamic #57,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      31: invokestatic  #61                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      34: goto          52
      37: iload_3
      38: iload_3
      39: imul
      40: istore        4
      42: iload         4
      44: invokedynamic #57,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      49: invokestatic  #61                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      52: return

  private void goodB2G(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: invokestatic  #7                  // Method testcasesupport/IO.staticReturnsTrueOrFalse:()Z
       3: ifeq          61
       6: ldc           #15                 // int -2147483648
       8: istore_3
       9: aload_1
      10: invokeinterface #16,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getCookies:()[Ljavax/servlet/http/Cookie;
      15: astore        4
      17: aload         4
      19: ifnull        58
      22: aload         4
      24: iconst_0
      25: aaload
      26: invokevirtual #22                 // Method javax/servlet/http/Cookie.getValue:()Ljava/lang/String;
      29: astore        5
      31: aload         5
      33: invokevirtual #28                 // Method java/lang/String.trim:()Ljava/lang/String;
      36: invokestatic  #33                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      39: istore_3
      40: goto          58
      43: astore        6
      45: getstatic     #39                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
      48: getstatic     #43                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      51: ldc           #49                 // String Number format exception reading data from cookie
      53: aload         6
      55: invokevirtual #51                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      58: goto          113
      61: ldc           #15                 // int -2147483648
      63: istore_3
      64: aload_1
      65: invokeinterface #16,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getCookies:()[Ljavax/servlet/http/Cookie;
      70: astore        4
      72: aload         4
      74: ifnull        113
      77: aload         4
      79: iconst_0
      80: aaload
      81: invokevirtual #22                 // Method javax/servlet/http/Cookie.getValue:()Ljava/lang/String;
      84: astore        5
      86: aload         5
      88: invokevirtual #28                 // Method java/lang/String.trim:()Ljava/lang/String;
      91: invokestatic  #33                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      94: istore_3
      95: goto          113
      98: astore        6
     100: getstatic     #39                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
     103: getstatic     #43                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
     106: ldc           #49                 // String Number format exception reading data from cookie
     108: aload         6
     110: invokevirtual #51                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
     113: invokestatic  #7                  // Method testcasesupport/IO.staticReturnsTrueOrFalse:()Z
     116: ifeq          176
     119: iload_3
     120: ldc           #15                 // int -2147483648
     122: if_icmpeq     168
     125: iload_3
     126: i2l
     127: ldc2_w        #67                 // long -9223372036854775808l
     130: lcmp
     131: ifeq          168
     134: iload_3
     135: invokestatic  #69                 // Method java/lang/Math.abs:(I)I
     138: i2l
     139: ldc2_w        #75                 // double 2.147483647E9d
     142: invokestatic  #77                 // Method java/lang/Math.sqrt:(D)D
     145: d2l
     146: lcmp
     147: ifgt          168
     150: iload_3
     151: iload_3
     152: imul
     153: istore        4
     155: iload         4
     157: invokedynamic #57,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
     162: invokestatic  #61                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     165: goto          230
     168: ldc           #81                 // String data value is too large to perform squaring.
     170: invokestatic  #61                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     173: goto          230
     176: iload_3
     177: ldc           #15                 // int -2147483648
     179: if_icmpeq     225
     182: iload_3
     183: i2l
     184: ldc2_w        #67                 // long -9223372036854775808l
     187: lcmp
     188: ifeq          225
     191: iload_3
     192: invokestatic  #69                 // Method java/lang/Math.abs:(I)I
     195: i2l
     196: ldc2_w        #75                 // double 2.147483647E9d
     199: invokestatic  #77                 // Method java/lang/Math.sqrt:(D)D
     202: d2l
     203: lcmp
     204: ifgt          225
     207: iload_3
     208: iload_3
     209: imul
     210: istore        4
     212: iload         4
     214: invokedynamic #57,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
     219: invokestatic  #61                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     222: goto          230
     225: ldc           #81                 // String data value is too large to perform squaring.
     227: invokestatic  #61                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     230: return
    Exception table:
       from    to  target type
          31    40    43   Class java/lang/NumberFormatException
          86    95    98   Class java/lang/NumberFormatException

  public void good(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #83                 // Method goodG2B:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokevirtual #89                 // Method goodB2G:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      12: return

  public static void main(java.lang.String[]) throws java.lang.ClassNotFoundException, java.lang.InstantiationException, java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: invokestatic  #92                 // Method mainFromParent:([Ljava/lang/String;)V
       4: return
}
