Compiled from "CWE190_Integer_Overflow__int_getParameter_Servlet_square_07.java"
public class testcases.CWE190_Integer_Overflow.s02.CWE190_Integer_Overflow__int_getParameter_Servlet_square_07 extends testcasesupport.AbstractTestCaseServlet {
  private int privateFive;

  public testcases.CWE190_Integer_Overflow.s02.CWE190_Integer_Overflow__int_getParameter_Servlet_square_07();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method testcasesupport/AbstractTestCaseServlet."<init>":()V
       4: aload_0
       5: iconst_5
       6: putfield      #7                  // Field privateFive:I
       9: return

  public void bad(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #7                  // Field privateFive:I
       4: iconst_5
       5: if_icmpne     51
       8: ldc           #15                 // int -2147483648
      10: istore_3
      11: aload_1
      12: ldc           #16                 // String name
      14: invokeinterface #18,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getParameter:(Ljava/lang/String;)Ljava/lang/String;
      19: astore        4
      21: aload         4
      23: invokevirtual #24                 // Method java/lang/String.trim:()Ljava/lang/String;
      26: invokestatic  #30                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      29: istore_3
      30: goto          48
      33: astore        5
      35: getstatic     #36                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
      38: getstatic     #42                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      41: ldc           #48                 // String Number format exception reading data from parameter \'name\'
      43: aload         5
      45: invokevirtual #50                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      48: goto          53
      51: iconst_0
      52: istore_3
      53: aload_0
      54: getfield      #7                  // Field privateFive:I
      57: iconst_5
      58: if_icmpne     76
      61: iload_3
      62: iload_3
      63: imul
      64: istore        4
      66: iload         4
      68: invokedynamic #56,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      73: invokestatic  #60                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      76: return
    Exception table:
       from    to  target type
          21    30    33   Class java/lang/NumberFormatException

  private void goodG2B1(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #7                  // Field privateFive:I
       4: iconst_5
       5: if_icmpeq     13
       8: iconst_0
       9: istore_3
      10: goto          15
      13: iconst_2
      14: istore_3
      15: aload_0
      16: getfield      #7                  // Field privateFive:I
      19: iconst_5
      20: if_icmpne     38
      23: iload_3
      24: iload_3
      25: imul
      26: istore        4
      28: iload         4
      30: invokedynamic #56,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      35: invokestatic  #60                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      38: return

  private void goodG2B2(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #7                  // Field privateFive:I
       4: iconst_5
       5: if_icmpne     13
       8: iconst_2
       9: istore_3
      10: goto          15
      13: iconst_0
      14: istore_3
      15: aload_0
      16: getfield      #7                  // Field privateFive:I
      19: iconst_5
      20: if_icmpne     38
      23: iload_3
      24: iload_3
      25: imul
      26: istore        4
      28: iload         4
      30: invokedynamic #56,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      35: invokestatic  #60                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      38: return

  private void goodB2G1(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #7                  // Field privateFive:I
       4: iconst_5
       5: if_icmpne     51
       8: ldc           #15                 // int -2147483648
      10: istore_3
      11: aload_1
      12: ldc           #16                 // String name
      14: invokeinterface #18,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getParameter:(Ljava/lang/String;)Ljava/lang/String;
      19: astore        4
      21: aload         4
      23: invokevirtual #24                 // Method java/lang/String.trim:()Ljava/lang/String;
      26: invokestatic  #30                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      29: istore_3
      30: goto          48
      33: astore        5
      35: getstatic     #36                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
      38: getstatic     #42                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      41: ldc           #48                 // String Number format exception reading data from parameter \'name\'
      43: aload         5
      45: invokevirtual #50                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      48: goto          53
      51: iconst_0
      52: istore_3
      53: aload_0
      54: getfield      #7                  // Field privateFive:I
      57: iconst_5
      58: if_icmpeq     69
      61: ldc           #64                 // String Benign, fixed string
      63: invokestatic  #60                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      66: goto          123
      69: iload_3
      70: ldc           #15                 // int -2147483648
      72: if_icmpeq     118
      75: iload_3
      76: i2l
      77: ldc2_w        #68                 // long -9223372036854775808l
      80: lcmp
      81: ifeq          118
      84: iload_3
      85: invokestatic  #70                 // Method java/lang/Math.abs:(I)I
      88: i2l
      89: ldc2_w        #76                 // double 2.147483647E9d
      92: invokestatic  #78                 // Method java/lang/Math.sqrt:(D)D
      95: d2l
      96: lcmp
      97: ifgt          118
     100: iload_3
     101: iload_3
     102: imul
     103: istore        4
     105: iload         4
     107: invokedynamic #56,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
     112: invokestatic  #60                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     115: goto          123
     118: ldc           #82                 // String data value is too large to perform squaring.
     120: invokestatic  #60                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     123: return
    Exception table:
       from    to  target type
          21    30    33   Class java/lang/NumberFormatException

  private void goodB2G2(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #7                  // Field privateFive:I
       4: iconst_5
       5: if_icmpne     51
       8: ldc           #15                 // int -2147483648
      10: istore_3
      11: aload_1
      12: ldc           #16                 // String name
      14: invokeinterface #18,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getParameter:(Ljava/lang/String;)Ljava/lang/String;
      19: astore        4
      21: aload         4
      23: invokevirtual #24                 // Method java/lang/String.trim:()Ljava/lang/String;
      26: invokestatic  #30                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      29: istore_3
      30: goto          48
      33: astore        5
      35: getstatic     #36                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
      38: getstatic     #42                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      41: ldc           #48                 // String Number format exception reading data from parameter \'name\'
      43: aload         5
      45: invokevirtual #50                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      48: goto          53
      51: iconst_0
      52: istore_3
      53: aload_0
      54: getfield      #7                  // Field privateFive:I
      57: iconst_5
      58: if_icmpne     115
      61: iload_3
      62: ldc           #15                 // int -2147483648
      64: if_icmpeq     110
      67: iload_3
      68: i2l
      69: ldc2_w        #68                 // long -9223372036854775808l
      72: lcmp
      73: ifeq          110
      76: iload_3
      77: invokestatic  #70                 // Method java/lang/Math.abs:(I)I
      80: i2l
      81: ldc2_w        #76                 // double 2.147483647E9d
      84: invokestatic  #78                 // Method java/lang/Math.sqrt:(D)D
      87: d2l
      88: lcmp
      89: ifgt          110
      92: iload_3
      93: iload_3
      94: imul
      95: istore        4
      97: iload         4
      99: invokedynamic #56,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
     104: invokestatic  #60                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     107: goto          115
     110: ldc           #82                 // String data value is too large to perform squaring.
     112: invokestatic  #60                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     115: return
    Exception table:
       from    to  target type
          21    30    33   Class java/lang/NumberFormatException

  public void good(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #84                 // Method goodG2B1:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokevirtual #88                 // Method goodG2B2:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokevirtual #91                 // Method goodB2G1:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      18: aload_0
      19: aload_1
      20: aload_2
      21: invokevirtual #94                 // Method goodB2G2:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      24: return

  public static void main(java.lang.String[]) throws java.lang.ClassNotFoundException, java.lang.InstantiationException, java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: invokestatic  #97                 // Method mainFromParent:([Ljava/lang/String;)V
       4: return
}
