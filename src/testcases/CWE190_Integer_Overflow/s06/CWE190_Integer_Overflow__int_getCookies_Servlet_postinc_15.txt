Compiled from "CWE190_Integer_Overflow__int_getCookies_Servlet_postinc_15.java"
public class testcases.CWE190_Integer_Overflow.s06.CWE190_Integer_Overflow__int_getCookies_Servlet_postinc_15 extends testcasesupport.AbstractTestCaseServlet {
  public testcases.CWE190_Integer_Overflow.s06.CWE190_Integer_Overflow__int_getCookies_Servlet_postinc_15();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method testcasesupport/AbstractTestCaseServlet."<init>":()V
       4: return

  public void bad(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: bipush        6
       2: lookupswitch  { // 1
                     6: 20
               default: 75
          }
      20: ldc           #9                  // int -2147483648
      22: istore_3
      23: aload_1
      24: invokeinterface #10,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getCookies:()[Ljavax/servlet/http/Cookie;
      29: astore        4
      31: aload         4
      33: ifnull        72
      36: aload         4
      38: iconst_0
      39: aaload
      40: invokevirtual #16                 // Method javax/servlet/http/Cookie.getValue:()Ljava/lang/String;
      43: astore        5
      45: aload         5
      47: invokevirtual #22                 // Method java/lang/String.trim:()Ljava/lang/String;
      50: invokestatic  #27                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      53: istore_3
      54: goto          72
      57: astore        6
      59: getstatic     #33                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
      62: getstatic     #39                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      65: ldc           #45                 // String Number format exception reading data from cookie
      67: aload         6
      69: invokevirtual #47                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      72: goto          77
      75: iconst_0
      76: istore_3
      77: bipush        7
      79: lookupswitch  { // 1
                     7: 96
               default: 115
          }
      96: iinc          3, 1
      99: iload_3
     100: istore        4
     102: iload         4
     104: invokedynamic #53,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
     109: invokestatic  #57                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     112: goto          120
     115: ldc           #61                 // String Benign, fixed string
     117: invokestatic  #57                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     120: return
    Exception table:
       from    to  target type
          45    54    57   Class java/lang/NumberFormatException

  private void goodG2B1(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: iconst_5
       1: lookupswitch  { // 1
                     6: 20
               default: 25
          }
      20: iconst_0
      21: istore_3
      22: goto          27
      25: iconst_2
      26: istore_3
      27: bipush        7
      29: lookupswitch  { // 1
                     7: 48
               default: 67
          }
      48: iinc          3, 1
      51: iload_3
      52: istore        4
      54: iload         4
      56: invokedynamic #53,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      61: invokestatic  #57                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      64: goto          72
      67: ldc           #61                 // String Benign, fixed string
      69: invokestatic  #57                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      72: return

  private void goodG2B2(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: bipush        6
       2: lookupswitch  { // 1
                     6: 20
               default: 25
          }
      20: iconst_2
      21: istore_3
      22: goto          27
      25: iconst_0
      26: istore_3
      27: bipush        7
      29: lookupswitch  { // 1
                     7: 48
               default: 67
          }
      48: iinc          3, 1
      51: iload_3
      52: istore        4
      54: iload         4
      56: invokedynamic #53,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      61: invokestatic  #57                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      64: goto          72
      67: ldc           #61                 // String Benign, fixed string
      69: invokestatic  #57                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      72: return

  private void goodB2G1(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: bipush        6
       2: lookupswitch  { // 1
                     6: 20
               default: 75
          }
      20: ldc           #9                  // int -2147483648
      22: istore_3
      23: aload_1
      24: invokeinterface #10,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getCookies:()[Ljavax/servlet/http/Cookie;
      29: astore        4
      31: aload         4
      33: ifnull        72
      36: aload         4
      38: iconst_0
      39: aaload
      40: invokevirtual #16                 // Method javax/servlet/http/Cookie.getValue:()Ljava/lang/String;
      43: astore        5
      45: aload         5
      47: invokevirtual #22                 // Method java/lang/String.trim:()Ljava/lang/String;
      50: invokestatic  #27                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      53: istore_3
      54: goto          72
      57: astore        6
      59: getstatic     #33                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
      62: getstatic     #39                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      65: ldc           #45                 // String Number format exception reading data from cookie
      67: aload         6
      69: invokevirtual #47                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      72: goto          77
      75: iconst_0
      76: istore_3
      77: bipush        8
      79: lookupswitch  { // 1
                     7: 96
               default: 104
          }
      96: ldc           #61                 // String Benign, fixed string
      98: invokestatic  #57                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     101: goto          134
     104: iload_3
     105: ldc           #63                 // int 2147483647
     107: if_icmpge     129
     110: iinc          3, 1
     113: iload_3
     114: istore        4
     116: iload         4
     118: invokedynamic #53,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
     123: invokestatic  #57                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     126: goto          134
     129: ldc           #64                 // String data value is too large to increment.
     131: invokestatic  #57                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     134: return
    Exception table:
       from    to  target type
          45    54    57   Class java/lang/NumberFormatException

  private void goodB2G2(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: bipush        6
       2: lookupswitch  { // 1
                     6: 20
               default: 75
          }
      20: ldc           #9                  // int -2147483648
      22: istore_3
      23: aload_1
      24: invokeinterface #10,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getCookies:()[Ljavax/servlet/http/Cookie;
      29: astore        4
      31: aload         4
      33: ifnull        72
      36: aload         4
      38: iconst_0
      39: aaload
      40: invokevirtual #16                 // Method javax/servlet/http/Cookie.getValue:()Ljava/lang/String;
      43: astore        5
      45: aload         5
      47: invokevirtual #22                 // Method java/lang/String.trim:()Ljava/lang/String;
      50: invokestatic  #27                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      53: istore_3
      54: goto          72
      57: astore        6
      59: getstatic     #33                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
      62: getstatic     #39                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      65: ldc           #45                 // String Number format exception reading data from cookie
      67: aload         6
      69: invokevirtual #47                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      72: goto          77
      75: iconst_0
      76: istore_3
      77: bipush        7
      79: lookupswitch  { // 1
                     7: 96
               default: 129
          }
      96: iload_3
      97: ldc           #63                 // int 2147483647
      99: if_icmpge     121
     102: iinc          3, 1
     105: iload_3
     106: istore        4
     108: iload         4
     110: invokedynamic #53,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
     115: invokestatic  #57                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     118: goto          134
     121: ldc           #64                 // String data value is too large to increment.
     123: invokestatic  #57                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     126: goto          134
     129: ldc           #61                 // String Benign, fixed string
     131: invokestatic  #57                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     134: return
    Exception table:
       from    to  target type
          45    54    57   Class java/lang/NumberFormatException

  public void good(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #66                 // Method goodG2B1:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokevirtual #72                 // Method goodG2B2:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokevirtual #75                 // Method goodB2G1:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      18: aload_0
      19: aload_1
      20: aload_2
      21: invokevirtual #78                 // Method goodB2G2:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      24: return

  public static void main(java.lang.String[]) throws java.lang.ClassNotFoundException, java.lang.InstantiationException, java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: invokestatic  #81                 // Method mainFromParent:([Ljava/lang/String;)V
       4: return
}
