Compiled from "CWE483_Incorrect_Block_Delimitation__semicolon_10.java"
public class testcases.CWE483_Incorrect_Block_Delimitation.CWE483_Incorrect_Block_Delimitation__semicolon_10 extends testcasesupport.AbstractTestCase {
  public testcases.CWE483_Incorrect_Block_Delimitation.CWE483_Incorrect_Block_Delimitation__semicolon_10();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method testcasesupport/AbstractTestCase."<init>":()V
       4: return

  public void bad() throws java.lang.Throwable;
    Code:
       0: getstatic     #7                  // Field testcasesupport/IO.staticTrue:Z
       3: ifeq          35
       6: new           #13                 // class java/security/SecureRandom
       9: dup
      10: invokespecial #15                 // Method java/security/SecureRandom."<init>":()V
      13: iconst_3
      14: invokevirtual #16                 // Method java/security/SecureRandom.nextInt:(I)I
      17: istore_1
      18: iconst_0
      19: istore_2
      20: iload_1
      21: ifne          24
      24: ldc           #20                 // String x == 0
      26: invokestatic  #22                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      29: iconst_1
      30: istore_2
      31: iload_2
      32: invokestatic  #26                 // Method testcasesupport/IO.writeLine:(I)V
      35: return

  private void good1() throws java.lang.Throwable;
    Code:
       0: getstatic     #29                 // Field testcasesupport/IO.staticFalse:Z
       3: ifeq          14
       6: ldc           #32                 // String Benign, fixed string
       8: invokestatic  #22                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      11: goto          43
      14: new           #13                 // class java/security/SecureRandom
      17: dup
      18: invokespecial #15                 // Method java/security/SecureRandom."<init>":()V
      21: iconst_3
      22: invokevirtual #16                 // Method java/security/SecureRandom.nextInt:(I)I
      25: istore_1
      26: iconst_0
      27: istore_2
      28: iload_1
      29: ifne          39
      32: ldc           #20                 // String x == 0
      34: invokestatic  #22                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      37: iconst_1
      38: istore_2
      39: iload_2
      40: invokestatic  #26                 // Method testcasesupport/IO.writeLine:(I)V
      43: return

  private void good2() throws java.lang.Throwable;
    Code:
       0: getstatic     #7                  // Field testcasesupport/IO.staticTrue:Z
       3: ifeq          35
       6: new           #13                 // class java/security/SecureRandom
       9: dup
      10: invokespecial #15                 // Method java/security/SecureRandom."<init>":()V
      13: iconst_3
      14: invokevirtual #16                 // Method java/security/SecureRandom.nextInt:(I)I
      17: istore_1
      18: iconst_0
      19: istore_2
      20: iload_1
      21: ifne          31
      24: ldc           #20                 // String x == 0
      26: invokestatic  #22                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      29: iconst_1
      30: istore_2
      31: iload_2
      32: invokestatic  #26                 // Method testcasesupport/IO.writeLine:(I)V
      35: return

  public void good() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method good1:()V
       4: aload_0
       5: invokevirtual #39                 // Method good2:()V
       8: return

  public static void main(java.lang.String[]) throws java.lang.ClassNotFoundException, java.lang.InstantiationException, java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: invokestatic  #42                 // Method mainFromParent:([Ljava/lang/String;)V
       4: return
}
