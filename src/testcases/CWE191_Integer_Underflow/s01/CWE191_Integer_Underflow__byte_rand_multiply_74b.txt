Compiled from "CWE191_Integer_Underflow__byte_rand_multiply_74b.java"
public class testcases.CWE191_Integer_Underflow.s01.CWE191_Integer_Underflow__byte_rand_multiply_74b {
  public testcases.CWE191_Integer_Underflow.s01.CWE191_Integer_Underflow__byte_rand_multiply_74b();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void badSink(java.util.HashMap<java.lang.Integer, java.lang.Byte>) throws java.lang.Throwable;
    Code:
       0: aload_1
       1: iconst_2
       2: invokestatic  #7                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: invokevirtual #13                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #19                 // class java/lang/Byte
      11: invokevirtual #21                 // Method java/lang/Byte.byteValue:()B
      14: istore_2
      15: iload_2
      16: ifge          33
      19: iload_2
      20: iconst_2
      21: imul
      22: i2b
      23: istore_3
      24: iload_3
      25: invokedynamic #25,  0             // InvokeDynamic #0:makeConcatWithConstants:(B)Ljava/lang/String;
      30: invokestatic  #29                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      33: return

  public void goodG2BSink(java.util.HashMap<java.lang.Integer, java.lang.Byte>) throws java.lang.Throwable;
    Code:
       0: aload_1
       1: iconst_2
       2: invokestatic  #7                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: invokevirtual #13                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #19                 // class java/lang/Byte
      11: invokevirtual #21                 // Method java/lang/Byte.byteValue:()B
      14: istore_2
      15: iload_2
      16: ifge          33
      19: iload_2
      20: iconst_2
      21: imul
      22: i2b
      23: istore_3
      24: iload_3
      25: invokedynamic #25,  0             // InvokeDynamic #0:makeConcatWithConstants:(B)Ljava/lang/String;
      30: invokestatic  #29                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      33: return

  public void goodB2GSink(java.util.HashMap<java.lang.Integer, java.lang.Byte>) throws java.lang.Throwable;
    Code:
       0: aload_1
       1: iconst_2
       2: invokestatic  #7                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: invokevirtual #13                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #19                 // class java/lang/Byte
      11: invokevirtual #21                 // Method java/lang/Byte.byteValue:()B
      14: istore_2
      15: iload_2
      16: ifge          47
      19: iload_2
      20: bipush        -64
      22: if_icmple     42
      25: iload_2
      26: iconst_2
      27: imul
      28: i2b
      29: istore_3
      30: iload_3
      31: invokedynamic #25,  0             // InvokeDynamic #0:makeConcatWithConstants:(B)Ljava/lang/String;
      36: invokestatic  #29                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      39: goto          47
      42: ldc           #35                 // String data value is too small to perform multiplication.
      44: invokestatic  #29                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      47: return
}
