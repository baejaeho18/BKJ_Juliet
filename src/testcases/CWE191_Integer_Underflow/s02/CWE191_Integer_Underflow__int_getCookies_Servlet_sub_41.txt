Compiled from "CWE191_Integer_Underflow__int_getCookies_Servlet_sub_41.java"
public class testcases.CWE191_Integer_Underflow.s02.CWE191_Integer_Underflow__int_getCookies_Servlet_sub_41 extends testcasesupport.AbstractTestCaseServlet {
  public testcases.CWE191_Integer_Underflow.s02.CWE191_Integer_Underflow__int_getCookies_Servlet_sub_41();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method testcasesupport/AbstractTestCaseServlet."<init>":()V
       4: return

  private void badSink(int, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: iload_1
       1: iconst_1
       2: isub
       3: istore        4
       5: iload         4
       7: invokedynamic #7,  0              // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      12: invokestatic  #11                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      15: return

  public void bad(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: ldc           #19                 // int -2147483648
       2: istore_3
       3: aload_1
       4: invokeinterface #20,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getCookies:()[Ljavax/servlet/http/Cookie;
       9: astore        4
      11: aload         4
      13: ifnull        52
      16: aload         4
      18: iconst_0
      19: aaload
      20: invokevirtual #26                 // Method javax/servlet/http/Cookie.getValue:()Ljava/lang/String;
      23: astore        5
      25: aload         5
      27: invokevirtual #32                 // Method java/lang/String.trim:()Ljava/lang/String;
      30: invokestatic  #37                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      33: istore_3
      34: goto          52
      37: astore        6
      39: getstatic     #43                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
      42: getstatic     #47                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      45: ldc           #53                 // String Number format exception reading data from cookie
      47: aload         6
      49: invokevirtual #55                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      52: aload_0
      53: iload_3
      54: aload_1
      55: aload_2
      56: invokevirtual #61                 // Method badSink:(ILjavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      59: return
    Exception table:
       from    to  target type
          25    34    37   Class java/lang/NumberFormatException

  public void good(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #67                 // Method goodG2B:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokevirtual #71                 // Method goodB2G:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      12: return

  private void goodG2BSink(int, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: iload_1
       1: iconst_1
       2: isub
       3: istore        4
       5: iload         4
       7: invokedynamic #7,  0              // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      12: invokestatic  #11                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      15: return

  private void goodG2B(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: iconst_2
       1: istore_3
       2: aload_0
       3: iload_3
       4: aload_1
       5: aload_2
       6: invokevirtual #74                 // Method goodG2BSink:(ILjavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
       9: return

  private void goodB2GSink(int, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: iload_1
       1: ldc           #19                 // int -2147483648
       3: if_icmple     24
       6: iload_1
       7: iconst_1
       8: isub
       9: istore        4
      11: iload         4
      13: invokedynamic #7,  0              // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      18: invokestatic  #11                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      21: goto          29
      24: ldc           #77                 // String data value is too small to perform subtraction.
      26: invokestatic  #11                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      29: return

  private void goodB2G(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: ldc           #19                 // int -2147483648
       2: istore_3
       3: aload_1
       4: invokeinterface #20,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getCookies:()[Ljavax/servlet/http/Cookie;
       9: astore        4
      11: aload         4
      13: ifnull        52
      16: aload         4
      18: iconst_0
      19: aaload
      20: invokevirtual #26                 // Method javax/servlet/http/Cookie.getValue:()Ljava/lang/String;
      23: astore        5
      25: aload         5
      27: invokevirtual #32                 // Method java/lang/String.trim:()Ljava/lang/String;
      30: invokestatic  #37                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      33: istore_3
      34: goto          52
      37: astore        6
      39: getstatic     #43                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
      42: getstatic     #47                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      45: ldc           #53                 // String Number format exception reading data from cookie
      47: aload         6
      49: invokevirtual #55                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      52: aload_0
      53: iload_3
      54: aload_1
      55: aload_2
      56: invokevirtual #79                 // Method goodB2GSink:(ILjavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      59: return
    Exception table:
       from    to  target type
          25    34    37   Class java/lang/NumberFormatException

  public static void main(java.lang.String[]) throws java.lang.ClassNotFoundException, java.lang.InstantiationException, java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: invokestatic  #82                 // Method mainFromParent:([Ljava/lang/String;)V
       4: return
}
