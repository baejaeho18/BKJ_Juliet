Compiled from "CWE191_Integer_Underflow__int_random_sub_21.java"
public class testcases.CWE191_Integer_Underflow.s02.CWE191_Integer_Underflow__int_random_sub_21 extends testcasesupport.AbstractTestCase {
  private boolean badPrivate;

  private boolean goodB2G1Private;

  private boolean goodB2G2Private;

  private boolean goodG2BPrivate;

  public testcases.CWE191_Integer_Underflow.s02.CWE191_Integer_Underflow__int_random_sub_21();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method testcasesupport/AbstractTestCase."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #7                  // Field badPrivate:Z
       9: aload_0
      10: iconst_0
      11: putfield      #13                 // Field goodB2G1Private:Z
      14: aload_0
      15: iconst_0
      16: putfield      #16                 // Field goodB2G2Private:Z
      19: aload_0
      20: iconst_0
      21: putfield      #19                 // Field goodG2BPrivate:Z
      24: return

  public void bad() throws java.lang.Throwable;
    Code:
       0: new           #22                 // class java/security/SecureRandom
       3: dup
       4: invokespecial #24                 // Method java/security/SecureRandom."<init>":()V
       7: invokevirtual #25                 // Method java/security/SecureRandom.nextInt:()I
      10: istore_1
      11: aload_0
      12: iconst_1
      13: putfield      #7                  // Field badPrivate:Z
      16: aload_0
      17: iload_1
      18: invokevirtual #29                 // Method badSink:(I)V
      21: return

  private void badSink(int) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #7                  // Field badPrivate:Z
       4: ifeq          20
       7: iload_1
       8: iconst_1
       9: isub
      10: istore_2
      11: iload_2
      12: invokedynamic #33,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      17: invokestatic  #37                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      20: return

  public void good() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method goodB2G1:()V
       4: aload_0
       5: invokevirtual #46                 // Method goodB2G2:()V
       8: aload_0
       9: invokevirtual #49                 // Method goodG2B:()V
      12: return

  private void goodB2G1() throws java.lang.Throwable;
    Code:
       0: new           #22                 // class java/security/SecureRandom
       3: dup
       4: invokespecial #24                 // Method java/security/SecureRandom."<init>":()V
       7: invokevirtual #25                 // Method java/security/SecureRandom.nextInt:()I
      10: istore_1
      11: aload_0
      12: iconst_0
      13: putfield      #13                 // Field goodB2G1Private:Z
      16: aload_0
      17: iload_1
      18: invokevirtual #52                 // Method goodB2G1Sink:(I)V
      21: return

  private void goodB2G1Sink(int) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #13                 // Field goodB2G1Private:Z
       4: ifeq          15
       7: ldc           #55                 // String Benign, fixed string
       9: invokestatic  #37                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      12: goto          42
      15: iload_1
      16: ldc           #59                 // int -2147483648
      18: if_icmple     37
      21: iload_1
      22: iconst_1
      23: isub
      24: istore_2
      25: iload_2
      26: invokedynamic #33,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      31: invokestatic  #37                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      34: goto          42
      37: ldc           #60                 // String data value is too small to perform subtraction.
      39: invokestatic  #37                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      42: return

  private void goodB2G2() throws java.lang.Throwable;
    Code:
       0: new           #22                 // class java/security/SecureRandom
       3: dup
       4: invokespecial #24                 // Method java/security/SecureRandom."<init>":()V
       7: invokevirtual #25                 // Method java/security/SecureRandom.nextInt:()I
      10: istore_1
      11: aload_0
      12: iconst_1
      13: putfield      #16                 // Field goodB2G2Private:Z
      16: aload_0
      17: iload_1
      18: invokevirtual #62                 // Method goodB2G2Sink:(I)V
      21: return

  private void goodB2G2Sink(int) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #16                 // Field goodB2G2Private:Z
       4: ifeq          34
       7: iload_1
       8: ldc           #59                 // int -2147483648
      10: if_icmple     29
      13: iload_1
      14: iconst_1
      15: isub
      16: istore_2
      17: iload_2
      18: invokedynamic #33,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      23: invokestatic  #37                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      26: goto          34
      29: ldc           #60                 // String data value is too small to perform subtraction.
      31: invokestatic  #37                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      34: return

  private void goodG2B() throws java.lang.Throwable;
    Code:
       0: iconst_2
       1: istore_1
       2: aload_0
       3: iconst_1
       4: putfield      #19                 // Field goodG2BPrivate:Z
       7: aload_0
       8: iload_1
       9: invokevirtual #65                 // Method goodG2BSink:(I)V
      12: return

  private void goodG2BSink(int) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #19                 // Field goodG2BPrivate:Z
       4: ifeq          20
       7: iload_1
       8: iconst_1
       9: isub
      10: istore_2
      11: iload_2
      12: invokedynamic #33,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      17: invokestatic  #37                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      20: return

  public static void main(java.lang.String[]) throws java.lang.ClassNotFoundException, java.lang.InstantiationException, java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: invokestatic  #68                 // Method mainFromParent:([Ljava/lang/String;)V
       4: return
}
