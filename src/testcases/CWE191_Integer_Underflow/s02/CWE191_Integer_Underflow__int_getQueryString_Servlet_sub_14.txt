Compiled from "CWE191_Integer_Underflow__int_getQueryString_Servlet_sub_14.java"
public class testcases.CWE191_Integer_Underflow.s02.CWE191_Integer_Underflow__int_getQueryString_Servlet_sub_14 extends testcasesupport.AbstractTestCaseServlet {
  public testcases.CWE191_Integer_Underflow.s02.CWE191_Integer_Underflow__int_getQueryString_Servlet_sub_14();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method testcasesupport/AbstractTestCaseServlet."<init>":()V
       4: return

  public void bad(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: getstatic     #7                  // Field testcasesupport/IO.staticFive:I
       3: iconst_5
       4: if_icmpne     89
       7: ldc           #15                 // int -2147483648
       9: istore_3
      10: new           #16                 // class java/util/StringTokenizer
      13: dup
      14: aload_1
      15: invokeinterface #18,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getQueryString:()Ljava/lang/String;
      20: ldc           #24                 // String &
      22: invokespecial #26                 // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      25: astore        4
      27: aload         4
      29: invokevirtual #29                 // Method java/util/StringTokenizer.hasMoreTokens:()Z
      32: ifeq          86
      35: aload         4
      37: invokevirtual #33                 // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      40: astore        5
      42: aload         5
      44: ldc           #36                 // String id=
      46: invokevirtual #38                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      49: ifeq          83
      52: aload         5
      54: iconst_3
      55: invokevirtual #44                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      58: invokestatic  #48                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      61: istore_3
      62: goto          86
      65: astore        6
      67: getstatic     #54                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
      70: getstatic     #58                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      73: ldc           #64                 // String Number format exception reading id from query string
      75: aload         6
      77: invokevirtual #66                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      80: goto          86
      83: goto          27
      86: goto          91
      89: iconst_0
      90: istore_3
      91: getstatic     #7                  // Field testcasesupport/IO.staticFive:I
      94: iconst_5
      95: if_icmpne     113
      98: iload_3
      99: iconst_1
     100: isub
     101: istore        4
     103: iload         4
     105: invokedynamic #72,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
     110: invokestatic  #75                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     113: return
    Exception table:
       from    to  target type
          52    62    65   Class java/lang/NumberFormatException

  private void goodG2B1(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: getstatic     #7                  // Field testcasesupport/IO.staticFive:I
       3: iconst_5
       4: if_icmpeq     12
       7: iconst_0
       8: istore_3
       9: goto          14
      12: iconst_2
      13: istore_3
      14: getstatic     #7                  // Field testcasesupport/IO.staticFive:I
      17: iconst_5
      18: if_icmpne     36
      21: iload_3
      22: iconst_1
      23: isub
      24: istore        4
      26: iload         4
      28: invokedynamic #72,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      33: invokestatic  #75                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      36: return

  private void goodG2B2(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: getstatic     #7                  // Field testcasesupport/IO.staticFive:I
       3: iconst_5
       4: if_icmpne     12
       7: iconst_2
       8: istore_3
       9: goto          14
      12: iconst_0
      13: istore_3
      14: getstatic     #7                  // Field testcasesupport/IO.staticFive:I
      17: iconst_5
      18: if_icmpne     36
      21: iload_3
      22: iconst_1
      23: isub
      24: istore        4
      26: iload         4
      28: invokedynamic #72,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      33: invokestatic  #75                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      36: return

  private void goodB2G1(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: getstatic     #7                  // Field testcasesupport/IO.staticFive:I
       3: iconst_5
       4: if_icmpne     89
       7: ldc           #15                 // int -2147483648
       9: istore_3
      10: new           #16                 // class java/util/StringTokenizer
      13: dup
      14: aload_1
      15: invokeinterface #18,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getQueryString:()Ljava/lang/String;
      20: ldc           #24                 // String &
      22: invokespecial #26                 // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      25: astore        4
      27: aload         4
      29: invokevirtual #29                 // Method java/util/StringTokenizer.hasMoreTokens:()Z
      32: ifeq          86
      35: aload         4
      37: invokevirtual #33                 // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      40: astore        5
      42: aload         5
      44: ldc           #36                 // String id=
      46: invokevirtual #38                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      49: ifeq          83
      52: aload         5
      54: iconst_3
      55: invokevirtual #44                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      58: invokestatic  #48                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      61: istore_3
      62: goto          86
      65: astore        6
      67: getstatic     #54                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
      70: getstatic     #58                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      73: ldc           #64                 // String Number format exception reading id from query string
      75: aload         6
      77: invokevirtual #66                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      80: goto          86
      83: goto          27
      86: goto          91
      89: iconst_0
      90: istore_3
      91: getstatic     #7                  // Field testcasesupport/IO.staticFive:I
      94: iconst_5
      95: if_icmpeq     106
      98: ldc           #79                 // String Benign, fixed string
     100: invokestatic  #75                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     103: goto          135
     106: iload_3
     107: ldc           #15                 // int -2147483648
     109: if_icmple     130
     112: iload_3
     113: iconst_1
     114: isub
     115: istore        4
     117: iload         4
     119: invokedynamic #72,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
     124: invokestatic  #75                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     127: goto          135
     130: ldc           #81                 // String data value is too small to perform subtraction.
     132: invokestatic  #75                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     135: return
    Exception table:
       from    to  target type
          52    62    65   Class java/lang/NumberFormatException

  private void goodB2G2(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: getstatic     #7                  // Field testcasesupport/IO.staticFive:I
       3: iconst_5
       4: if_icmpne     89
       7: ldc           #15                 // int -2147483648
       9: istore_3
      10: new           #16                 // class java/util/StringTokenizer
      13: dup
      14: aload_1
      15: invokeinterface #18,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getQueryString:()Ljava/lang/String;
      20: ldc           #24                 // String &
      22: invokespecial #26                 // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      25: astore        4
      27: aload         4
      29: invokevirtual #29                 // Method java/util/StringTokenizer.hasMoreTokens:()Z
      32: ifeq          86
      35: aload         4
      37: invokevirtual #33                 // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      40: astore        5
      42: aload         5
      44: ldc           #36                 // String id=
      46: invokevirtual #38                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      49: ifeq          83
      52: aload         5
      54: iconst_3
      55: invokevirtual #44                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      58: invokestatic  #48                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      61: istore_3
      62: goto          86
      65: astore        6
      67: getstatic     #54                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
      70: getstatic     #58                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      73: ldc           #64                 // String Number format exception reading id from query string
      75: aload         6
      77: invokevirtual #66                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      80: goto          86
      83: goto          27
      86: goto          91
      89: iconst_0
      90: istore_3
      91: getstatic     #7                  // Field testcasesupport/IO.staticFive:I
      94: iconst_5
      95: if_icmpne     127
      98: iload_3
      99: ldc           #15                 // int -2147483648
     101: if_icmple     122
     104: iload_3
     105: iconst_1
     106: isub
     107: istore        4
     109: iload         4
     111: invokedynamic #72,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
     116: invokestatic  #75                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     119: goto          127
     122: ldc           #81                 // String data value is too small to perform subtraction.
     124: invokestatic  #75                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     127: return
    Exception table:
       from    to  target type
          52    62    65   Class java/lang/NumberFormatException

  public void good(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #83                 // Method goodG2B1:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokevirtual #89                 // Method goodG2B2:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokevirtual #92                 // Method goodB2G1:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      18: aload_0
      19: aload_1
      20: aload_2
      21: invokevirtual #95                 // Method goodB2G2:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      24: return

  public static void main(java.lang.String[]) throws java.lang.ClassNotFoundException, java.lang.InstantiationException, java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: invokestatic  #98                 // Method mainFromParent:([Ljava/lang/String;)V
       4: return
}
