Compiled from "CWE191_Integer_Underflow__int_getCookies_Servlet_sub_12.java"
public class testcases.CWE191_Integer_Underflow.s02.CWE191_Integer_Underflow__int_getCookies_Servlet_sub_12 extends testcasesupport.AbstractTestCaseServlet {
  public testcases.CWE191_Integer_Underflow.s02.CWE191_Integer_Underflow__int_getCookies_Servlet_sub_12();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method testcasesupport/AbstractTestCaseServlet."<init>":()V
       4: return

  public void bad(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: invokestatic  #7                  // Method testcasesupport/IO.staticReturnsTrueOrFalse:()Z
       3: ifeq          61
       6: ldc           #15                 // int -2147483648
       8: istore_3
       9: aload_1
      10: invokeinterface #16,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getCookies:()[Ljavax/servlet/http/Cookie;
      15: astore        4
      17: aload         4
      19: ifnull        58
      22: aload         4
      24: iconst_0
      25: aaload
      26: invokevirtual #22                 // Method javax/servlet/http/Cookie.getValue:()Ljava/lang/String;
      29: astore        5
      31: aload         5
      33: invokevirtual #28                 // Method java/lang/String.trim:()Ljava/lang/String;
      36: invokestatic  #33                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      39: istore_3
      40: goto          58
      43: astore        6
      45: getstatic     #39                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
      48: getstatic     #43                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      51: ldc           #49                 // String Number format exception reading data from cookie
      53: aload         6
      55: invokevirtual #51                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      58: goto          63
      61: iconst_2
      62: istore_3
      63: invokestatic  #7                  // Method testcasesupport/IO.staticReturnsTrueOrFalse:()Z
      66: ifeq          87
      69: iload_3
      70: iconst_1
      71: isub
      72: istore        4
      74: iload         4
      76: invokedynamic #57,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      81: invokestatic  #61                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      84: goto          116
      87: iload_3
      88: ldc           #15                 // int -2147483648
      90: if_icmple     111
      93: iload_3
      94: iconst_1
      95: isub
      96: istore        4
      98: iload         4
     100: invokedynamic #57,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
     105: invokestatic  #61                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     108: goto          116
     111: ldc           #65                 // String data value is too small to perform subtraction.
     113: invokestatic  #61                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     116: return
    Exception table:
       from    to  target type
          31    40    43   Class java/lang/NumberFormatException

  private void goodG2B(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: invokestatic  #7                  // Method testcasesupport/IO.staticReturnsTrueOrFalse:()Z
       3: ifeq          11
       6: iconst_2
       7: istore_3
       8: goto          13
      11: iconst_2
      12: istore_3
      13: invokestatic  #7                  // Method testcasesupport/IO.staticReturnsTrueOrFalse:()Z
      16: ifeq          37
      19: iload_3
      20: iconst_1
      21: isub
      22: istore        4
      24: iload         4
      26: invokedynamic #57,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      31: invokestatic  #61                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      34: goto          52
      37: iload_3
      38: iconst_1
      39: isub
      40: istore        4
      42: iload         4
      44: invokedynamic #57,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      49: invokestatic  #61                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      52: return

  private void goodB2G(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: invokestatic  #7                  // Method testcasesupport/IO.staticReturnsTrueOrFalse:()Z
       3: ifeq          61
       6: ldc           #15                 // int -2147483648
       8: istore_3
       9: aload_1
      10: invokeinterface #16,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getCookies:()[Ljavax/servlet/http/Cookie;
      15: astore        4
      17: aload         4
      19: ifnull        58
      22: aload         4
      24: iconst_0
      25: aaload
      26: invokevirtual #22                 // Method javax/servlet/http/Cookie.getValue:()Ljava/lang/String;
      29: astore        5
      31: aload         5
      33: invokevirtual #28                 // Method java/lang/String.trim:()Ljava/lang/String;
      36: invokestatic  #33                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      39: istore_3
      40: goto          58
      43: astore        6
      45: getstatic     #39                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
      48: getstatic     #43                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      51: ldc           #49                 // String Number format exception reading data from cookie
      53: aload         6
      55: invokevirtual #51                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      58: goto          113
      61: ldc           #15                 // int -2147483648
      63: istore_3
      64: aload_1
      65: invokeinterface #16,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getCookies:()[Ljavax/servlet/http/Cookie;
      70: astore        4
      72: aload         4
      74: ifnull        113
      77: aload         4
      79: iconst_0
      80: aaload
      81: invokevirtual #22                 // Method javax/servlet/http/Cookie.getValue:()Ljava/lang/String;
      84: astore        5
      86: aload         5
      88: invokevirtual #28                 // Method java/lang/String.trim:()Ljava/lang/String;
      91: invokestatic  #33                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      94: istore_3
      95: goto          113
      98: astore        6
     100: getstatic     #39                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
     103: getstatic     #43                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
     106: ldc           #49                 // String Number format exception reading data from cookie
     108: aload         6
     110: invokevirtual #51                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
     113: invokestatic  #7                  // Method testcasesupport/IO.staticReturnsTrueOrFalse:()Z
     116: ifeq          151
     119: iload_3
     120: ldc           #15                 // int -2147483648
     122: if_icmple     143
     125: iload_3
     126: iconst_1
     127: isub
     128: istore        4
     130: iload         4
     132: invokedynamic #57,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
     137: invokestatic  #61                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     140: goto          180
     143: ldc           #65                 // String data value is too small to perform subtraction.
     145: invokestatic  #61                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     148: goto          180
     151: iload_3
     152: ldc           #15                 // int -2147483648
     154: if_icmple     175
     157: iload_3
     158: iconst_1
     159: isub
     160: istore        4
     162: iload         4
     164: invokedynamic #57,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
     169: invokestatic  #61                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     172: goto          180
     175: ldc           #65                 // String data value is too small to perform subtraction.
     177: invokestatic  #61                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     180: return
    Exception table:
       from    to  target type
          31    40    43   Class java/lang/NumberFormatException
          86    95    98   Class java/lang/NumberFormatException

  public void good(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #67                 // Method goodG2B:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokevirtual #73                 // Method goodB2G:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      12: return

  public static void main(java.lang.String[]) throws java.lang.ClassNotFoundException, java.lang.InstantiationException, java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: invokestatic  #76                 // Method mainFromParent:([Ljava/lang/String;)V
       4: return
}
