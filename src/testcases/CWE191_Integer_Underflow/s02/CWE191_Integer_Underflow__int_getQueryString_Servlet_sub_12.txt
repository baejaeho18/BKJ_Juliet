Compiled from "CWE191_Integer_Underflow__int_getQueryString_Servlet_sub_12.java"
public class testcases.CWE191_Integer_Underflow.s02.CWE191_Integer_Underflow__int_getQueryString_Servlet_sub_12 extends testcasesupport.AbstractTestCaseServlet {
  public testcases.CWE191_Integer_Underflow.s02.CWE191_Integer_Underflow__int_getQueryString_Servlet_sub_12();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method testcasesupport/AbstractTestCaseServlet."<init>":()V
       4: return

  public void bad(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: invokestatic  #7                  // Method testcasesupport/IO.staticReturnsTrueOrFalse:()Z
       3: ifeq          88
       6: ldc           #15                 // int -2147483648
       8: istore_3
       9: new           #16                 // class java/util/StringTokenizer
      12: dup
      13: aload_1
      14: invokeinterface #18,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getQueryString:()Ljava/lang/String;
      19: ldc           #24                 // String &
      21: invokespecial #26                 // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      24: astore        4
      26: aload         4
      28: invokevirtual #29                 // Method java/util/StringTokenizer.hasMoreTokens:()Z
      31: ifeq          85
      34: aload         4
      36: invokevirtual #32                 // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      39: astore        5
      41: aload         5
      43: ldc           #35                 // String id=
      45: invokevirtual #37                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      48: ifeq          82
      51: aload         5
      53: iconst_3
      54: invokevirtual #43                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      57: invokestatic  #47                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      60: istore_3
      61: goto          85
      64: astore        6
      66: getstatic     #53                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
      69: getstatic     #57                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      72: ldc           #63                 // String Number format exception reading id from query string
      74: aload         6
      76: invokevirtual #65                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      79: goto          85
      82: goto          26
      85: goto          90
      88: iconst_2
      89: istore_3
      90: invokestatic  #7                  // Method testcasesupport/IO.staticReturnsTrueOrFalse:()Z
      93: ifeq          114
      96: iload_3
      97: iconst_1
      98: isub
      99: istore        4
     101: iload         4
     103: invokedynamic #71,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
     108: invokestatic  #74                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     111: goto          143
     114: iload_3
     115: ldc           #15                 // int -2147483648
     117: if_icmple     138
     120: iload_3
     121: iconst_1
     122: isub
     123: istore        4
     125: iload         4
     127: invokedynamic #71,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
     132: invokestatic  #74                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     135: goto          143
     138: ldc           #78                 // String data value is too small to perform subtraction.
     140: invokestatic  #74                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     143: return
    Exception table:
       from    to  target type
          51    61    64   Class java/lang/NumberFormatException

  private void goodG2B(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: invokestatic  #7                  // Method testcasesupport/IO.staticReturnsTrueOrFalse:()Z
       3: ifeq          11
       6: iconst_2
       7: istore_3
       8: goto          13
      11: iconst_2
      12: istore_3
      13: invokestatic  #7                  // Method testcasesupport/IO.staticReturnsTrueOrFalse:()Z
      16: ifeq          37
      19: iload_3
      20: iconst_1
      21: isub
      22: istore        4
      24: iload         4
      26: invokedynamic #71,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      31: invokestatic  #74                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      34: goto          52
      37: iload_3
      38: iconst_1
      39: isub
      40: istore        4
      42: iload         4
      44: invokedynamic #71,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      49: invokestatic  #74                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      52: return

  private void goodB2G(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: invokestatic  #7                  // Method testcasesupport/IO.staticReturnsTrueOrFalse:()Z
       3: ifeq          88
       6: ldc           #15                 // int -2147483648
       8: istore_3
       9: new           #16                 // class java/util/StringTokenizer
      12: dup
      13: aload_1
      14: invokeinterface #18,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getQueryString:()Ljava/lang/String;
      19: ldc           #24                 // String &
      21: invokespecial #26                 // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      24: astore        4
      26: aload         4
      28: invokevirtual #29                 // Method java/util/StringTokenizer.hasMoreTokens:()Z
      31: ifeq          85
      34: aload         4
      36: invokevirtual #32                 // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      39: astore        5
      41: aload         5
      43: ldc           #35                 // String id=
      45: invokevirtual #37                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      48: ifeq          82
      51: aload         5
      53: iconst_3
      54: invokevirtual #43                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      57: invokestatic  #47                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      60: istore_3
      61: goto          85
      64: astore        6
      66: getstatic     #53                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
      69: getstatic     #57                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      72: ldc           #63                 // String Number format exception reading id from query string
      74: aload         6
      76: invokevirtual #65                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      79: goto          85
      82: goto          26
      85: goto          167
      88: ldc           #15                 // int -2147483648
      90: istore_3
      91: new           #16                 // class java/util/StringTokenizer
      94: dup
      95: aload_1
      96: invokeinterface #18,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getQueryString:()Ljava/lang/String;
     101: ldc           #24                 // String &
     103: invokespecial #26                 // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     106: astore        4
     108: aload         4
     110: invokevirtual #29                 // Method java/util/StringTokenizer.hasMoreTokens:()Z
     113: ifeq          167
     116: aload         4
     118: invokevirtual #32                 // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
     121: astore        5
     123: aload         5
     125: ldc           #35                 // String id=
     127: invokevirtual #37                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     130: ifeq          164
     133: aload         5
     135: iconst_3
     136: invokevirtual #43                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     139: invokestatic  #47                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     142: istore_3
     143: goto          167
     146: astore        6
     148: getstatic     #53                 // Field testcasesupport/IO.logger:Ljava/util/logging/Logger;
     151: getstatic     #57                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
     154: ldc           #63                 // String Number format exception reading id from query string
     156: aload         6
     158: invokevirtual #65                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
     161: goto          167
     164: goto          108
     167: invokestatic  #7                  // Method testcasesupport/IO.staticReturnsTrueOrFalse:()Z
     170: ifeq          205
     173: iload_3
     174: ldc           #15                 // int -2147483648
     176: if_icmple     197
     179: iload_3
     180: iconst_1
     181: isub
     182: istore        4
     184: iload         4
     186: invokedynamic #71,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
     191: invokestatic  #74                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     194: goto          234
     197: ldc           #78                 // String data value is too small to perform subtraction.
     199: invokestatic  #74                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     202: goto          234
     205: iload_3
     206: ldc           #15                 // int -2147483648
     208: if_icmple     229
     211: iload_3
     212: iconst_1
     213: isub
     214: istore        4
     216: iload         4
     218: invokedynamic #71,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
     223: invokestatic  #74                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     226: goto          234
     229: ldc           #78                 // String data value is too small to perform subtraction.
     231: invokestatic  #74                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
     234: return
    Exception table:
       from    to  target type
          51    61    64   Class java/lang/NumberFormatException
         133   143   146   Class java/lang/NumberFormatException

  public void good(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #80                 // Method goodG2B:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokevirtual #86                 // Method goodB2G:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
      12: return

  public static void main(java.lang.String[]) throws java.lang.ClassNotFoundException, java.lang.InstantiationException, java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: invokestatic  #89                 // Method mainFromParent:([Ljava/lang/String;)V
       4: return
}
