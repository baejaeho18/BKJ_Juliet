Compiled from "CWE191_Integer_Underflow__int_min_multiply_21.java"
public class testcases.CWE191_Integer_Underflow.s02.CWE191_Integer_Underflow__int_min_multiply_21 extends testcasesupport.AbstractTestCase {
  private boolean badPrivate;

  private boolean goodB2G1Private;

  private boolean goodB2G2Private;

  private boolean goodG2BPrivate;

  public testcases.CWE191_Integer_Underflow.s02.CWE191_Integer_Underflow__int_min_multiply_21();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method testcasesupport/AbstractTestCase."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #7                  // Field badPrivate:Z
       9: aload_0
      10: iconst_0
      11: putfield      #13                 // Field goodB2G1Private:Z
      14: aload_0
      15: iconst_0
      16: putfield      #16                 // Field goodB2G2Private:Z
      19: aload_0
      20: iconst_0
      21: putfield      #19                 // Field goodG2BPrivate:Z
      24: return

  public void bad() throws java.lang.Throwable;
    Code:
       0: ldc           #24                 // int -2147483648
       2: istore_1
       3: aload_0
       4: iconst_1
       5: putfield      #7                  // Field badPrivate:Z
       8: aload_0
       9: iload_1
      10: invokevirtual #25                 // Method badSink:(I)V
      13: return

  private void badSink(int) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #7                  // Field badPrivate:Z
       4: ifeq          24
       7: iload_1
       8: ifge          24
      11: iload_1
      12: iconst_2
      13: imul
      14: istore_2
      15: iload_2
      16: invokedynamic #29,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      21: invokestatic  #33                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      24: return

  public void good() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method goodB2G1:()V
       4: aload_0
       5: invokevirtual #42                 // Method goodB2G2:()V
       8: aload_0
       9: invokevirtual #45                 // Method goodG2B:()V
      12: return

  private void goodB2G1() throws java.lang.Throwable;
    Code:
       0: ldc           #24                 // int -2147483648
       2: istore_1
       3: aload_0
       4: iconst_0
       5: putfield      #13                 // Field goodB2G1Private:Z
       8: aload_0
       9: iload_1
      10: invokevirtual #48                 // Method goodB2G1Sink:(I)V
      13: return

  private void goodB2G1Sink(int) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #13                 // Field goodB2G1Private:Z
       4: ifeq          15
       7: ldc           #51                 // String Benign, fixed string
       9: invokestatic  #33                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      12: goto          46
      15: iload_1
      16: ifge          46
      19: iload_1
      20: ldc           #53                 // int -1073741824
      22: if_icmple     41
      25: iload_1
      26: iconst_2
      27: imul
      28: istore_2
      29: iload_2
      30: invokedynamic #29,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      35: invokestatic  #33                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      38: goto          46
      41: ldc           #54                 // String data value is too small to perform multiplication.
      43: invokestatic  #33                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      46: return

  private void goodB2G2() throws java.lang.Throwable;
    Code:
       0: ldc           #24                 // int -2147483648
       2: istore_1
       3: aload_0
       4: iconst_1
       5: putfield      #16                 // Field goodB2G2Private:Z
       8: aload_0
       9: iload_1
      10: invokevirtual #56                 // Method goodB2G2Sink:(I)V
      13: return

  private void goodB2G2Sink(int) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #16                 // Field goodB2G2Private:Z
       4: ifeq          38
       7: iload_1
       8: ifge          38
      11: iload_1
      12: ldc           #53                 // int -1073741824
      14: if_icmple     33
      17: iload_1
      18: iconst_2
      19: imul
      20: istore_2
      21: iload_2
      22: invokedynamic #29,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      27: invokestatic  #33                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      30: goto          38
      33: ldc           #54                 // String data value is too small to perform multiplication.
      35: invokestatic  #33                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      38: return

  private void goodG2B() throws java.lang.Throwable;
    Code:
       0: iconst_2
       1: istore_1
       2: aload_0
       3: iconst_1
       4: putfield      #19                 // Field goodG2BPrivate:Z
       7: aload_0
       8: iload_1
       9: invokevirtual #59                 // Method goodG2BSink:(I)V
      12: return

  private void goodG2BSink(int) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #19                 // Field goodG2BPrivate:Z
       4: ifeq          24
       7: iload_1
       8: ifge          24
      11: iload_1
      12: iconst_2
      13: imul
      14: istore_2
      15: iload_2
      16: invokedynamic #29,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      21: invokestatic  #33                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      24: return

  public static void main(java.lang.String[]) throws java.lang.ClassNotFoundException, java.lang.InstantiationException, java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: invokestatic  #62                 // Method mainFromParent:([Ljava/lang/String;)V
       4: return
}
