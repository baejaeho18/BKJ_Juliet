Compiled from "CWE191_Integer_Underflow__int_getParameter_Servlet_multiply_74b.java"
public class testcases.CWE191_Integer_Underflow.s02.CWE191_Integer_Underflow__int_getParameter_Servlet_multiply_74b {
  public testcases.CWE191_Integer_Underflow.s02.CWE191_Integer_Underflow__int_getParameter_Servlet_multiply_74b();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void badSink(java.util.HashMap<java.lang.Integer, java.lang.Integer>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_1
       1: iconst_2
       2: invokestatic  #7                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: invokevirtual #13                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #8                  // class java/lang/Integer
      11: invokevirtual #19                 // Method java/lang/Integer.intValue:()I
      14: istore        4
      16: iload         4
      18: ifge          37
      21: iload         4
      23: iconst_2
      24: imul
      25: istore        5
      27: iload         5
      29: invokedynamic #23,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      34: invokestatic  #27                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      37: return

  public void goodG2BSink(java.util.HashMap<java.lang.Integer, java.lang.Integer>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_1
       1: iconst_2
       2: invokestatic  #7                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: invokevirtual #13                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #8                  // class java/lang/Integer
      11: invokevirtual #19                 // Method java/lang/Integer.intValue:()I
      14: istore        4
      16: iload         4
      18: ifge          37
      21: iload         4
      23: iconst_2
      24: imul
      25: istore        5
      27: iload         5
      29: invokedynamic #23,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      34: invokestatic  #27                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      37: return

  public void goodB2GSink(java.util.HashMap<java.lang.Integer, java.lang.Integer>, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.lang.Throwable;
    Code:
       0: aload_1
       1: iconst_2
       2: invokestatic  #7                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: invokevirtual #13                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #8                  // class java/lang/Integer
      11: invokevirtual #19                 // Method java/lang/Integer.intValue:()I
      14: istore        4
      16: iload         4
      18: ifge          52
      21: iload         4
      23: ldc           #33                 // int -1073741824
      25: if_icmple     47
      28: iload         4
      30: iconst_2
      31: imul
      32: istore        5
      34: iload         5
      36: invokedynamic #23,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;
      41: invokestatic  #27                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      44: goto          52
      47: ldc           #34                 // String data value is too small to perform multiplication.
      49: invokestatic  #27                 // Method testcasesupport/IO.writeLine:(Ljava/lang/String;)V
      52: return
}
